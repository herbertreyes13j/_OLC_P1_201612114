Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> s
Rule 1     s -> etiquetas
Rule 2     etiquetas -> etiquetas etiqueta
Rule 3     etiquetas -> etiqueta
Rule 4     sentencias -> sentencias sentencia
Rule 5     IF -> t_if par1 exp par2 GOTO
Rule 6     sentencias -> sentencia
Rule 7     etiqueta -> iden bipunto sentencias
Rule 8     sentencia -> asignacion
Rule 9     sentencia -> GOTO
Rule 10    sentencia -> UNSET
Rule 11    sentencia -> PRINT
Rule 12    sentencia -> EXIT
Rule 13    sentencia -> ASIGNACION_ARR
Rule 14    sentencia -> as_puntero
Rule 15    sentencia -> IF
Rule 16    ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA
Rule 17    UNSET -> t_unset par1 asignado par2 PTCOMA
Rule 18    GOTO -> t_goto iden PTCOMA
Rule 19    PRINT -> t_print par1 exp par2 PTCOMA
Rule 20    PRINT -> t_print par1 exp par2 error
Rule 21    PRINT -> error par1 exp par2 error
Rule 22    asignacion -> asignado asigna exp PTCOMA
Rule 23    as_puntero -> asignado asigna depuntero asignado PTCOMA
Rule 24    EXIT -> t_exit PTCOMA
Rule 25    asignado -> temporal
Rule 26    asignado -> puntero
Rule 27    asignado -> direccion
Rule 28    asignado -> parametro
Rule 29    asignado -> devfunc
Rule 30    asignado -> pila
Rule 31    exp -> exp1 bxor exp1
Rule 32    exp -> exp1 t_xor exp1
Rule 33    exp -> exp1
Rule 34    exp1 -> exp2 bor exp2
Rule 35    exp1 -> exp2 or exp2
Rule 36    exp1 -> exp2 shiftizq exp2
Rule 37    exp1 -> exp2 shiftder exp2
Rule 38    exp1 -> exp2
Rule 39    exp2 -> exp3 band exp3
Rule 40    exp2 -> exp3 and exp3
Rule 41    exp2 -> exp3
Rule 42    exp3 -> exp4 igual exp4
Rule 43    exp3 -> exp4 diferente exp4
Rule 44    exp3 -> exp4
Rule 45    exp4 -> exp5 mayor exp5
Rule 46    exp4 -> exp5 mayori exp5
Rule 47    exp4 -> exp5 menor exp5
Rule 48    exp4 -> exp5 menori exp5
Rule 49    exp4 -> exp5
Rule 50    exp5 -> exp6 mas exp6
Rule 51    exp5 -> exp6 res exp6
Rule 52    exp5 -> exp6
Rule 53    exp6 -> exp7 por exp7
Rule 54    exp6 -> exp7 div exp7
Rule 55    exp6 -> exp7 mod exp7
Rule 56    exp6 -> t_abs par1 exp7 par2
Rule 57    exp6 -> exp7
Rule 58    exp7 -> res exp11
Rule 59    exp7 -> not exp11
Rule 60    exp7 -> bnot exp11
Rule 61    exp11 -> asignado L_ACCESOS
Rule 62    L_ACCESOS -> L_ACCESOS acceso
Rule 63    L_ACCESOS -> acceso
Rule 64    acceso -> cor1 exp8 cor2
Rule 65    exp11 -> exp8
Rule 66    exp7 -> exp11
Rule 67    exp8 -> string
Rule 68    exp8 -> string2
Rule 69    exp8 -> entero
Rule 70    exp8 -> decimal
Rule 71    exp8 -> temporal
Rule 72    exp8 -> puntero
Rule 73    exp8 -> direccion
Rule 74    exp8 -> parametro
Rule 75    exp8 -> devfunc
Rule 76    exp8 -> pila
Rule 77    exp8 -> par1 t_int par2 exp
Rule 78    exp8 -> par1 t_float par2 exp
Rule 79    exp8 -> par1 t_char par2 exp
Rule 80    exp8 -> t_read par1 par2
Rule 81    exp8 -> t_array par1 par2

Terminals, with rules where they appear

PTCOMA               : 16 17 18 19 22 23 24
and                  : 40
asigna               : 16 22 23
band                 : 39
bipunto              : 7
bnot                 : 60
bor                  : 34
bxor                 : 31
cor1                 : 64
cor2                 : 64
decimal              : 70
depuntero            : 23
devfunc              : 29 75
diferente            : 43
direccion            : 27 73
div                  : 54
entero               : 69
error                : 20 21 21
iden                 : 7 18
igual                : 42
mas                  : 50
mayor                : 45
mayori               : 46
menor                : 47
menori               : 48
mod                  : 55
not                  : 59
or                   : 35
par1                 : 5 17 19 20 21 56 77 78 79 80 81
par2                 : 5 17 19 20 21 56 77 78 79 80 81
parametro            : 28 74
pila                 : 30 76
por                  : 53
puntero              : 26 72
res                  : 51 58
shiftder             : 37
shiftizq             : 36
string               : 67
string2              : 68
t_abs                : 56
t_array              : 81
t_char               : 79
t_exit               : 24
t_float              : 78
t_goto               : 18
t_if                 : 5
t_int                : 77
t_print              : 19 20
t_read               : 80
t_unset              : 17
t_xor                : 32
temporal             : 25 71

Nonterminals, with rules where they appear

ASIGNACION_ARR       : 13
EXIT                 : 12
GOTO                 : 5 9
IF                   : 15
L_ACCESOS            : 16 61 62
PRINT                : 11
UNSET                : 10
acceso               : 62 63
as_puntero           : 14
asignacion           : 8
asignado             : 16 17 22 23 23 61
etiqueta             : 2 3
etiquetas            : 1 2
exp                  : 5 16 19 20 21 22 77 78 79
exp1                 : 31 31 32 32 33
exp11                : 58 59 60 66
exp2                 : 34 34 35 35 36 36 37 37 38
exp3                 : 39 39 40 40 41
exp4                 : 42 42 43 43 44
exp5                 : 45 45 46 46 47 47 48 48 49
exp6                 : 50 50 51 51 52
exp7                 : 53 53 54 54 55 55 56 57
exp8                 : 64 65
s                    : 0
sentencia            : 4 6
sentencias           : 4 7

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . etiquetas
    (2) etiquetas -> . etiquetas etiqueta
    (3) etiquetas -> . etiqueta
    (7) etiqueta -> . iden bipunto sentencias

    iden            shift and go to state 4

    s                              shift and go to state 1
    etiquetas                      shift and go to state 2
    etiqueta                       shift and go to state 3

state 1

    (0) S' -> s .



state 2

    (1) s -> etiquetas .
    (2) etiquetas -> etiquetas . etiqueta
    (7) etiqueta -> . iden bipunto sentencias

    $end            reduce using rule 1 (s -> etiquetas .)
    iden            shift and go to state 4

    etiqueta                       shift and go to state 5

state 3

    (3) etiquetas -> etiqueta .

    iden            reduce using rule 3 (etiquetas -> etiqueta .)
    $end            reduce using rule 3 (etiquetas -> etiqueta .)


state 4

    (7) etiqueta -> iden . bipunto sentencias

    bipunto         shift and go to state 6


state 5

    (2) etiquetas -> etiquetas etiqueta .

    iden            reduce using rule 2 (etiquetas -> etiquetas etiqueta .)
    $end            reduce using rule 2 (etiquetas -> etiquetas etiqueta .)


state 6

    (7) etiqueta -> iden bipunto . sentencias
    (4) sentencias -> . sentencias sentencia
    (6) sentencias -> . sentencia
    (8) sentencia -> . asignacion
    (9) sentencia -> . GOTO
    (10) sentencia -> . UNSET
    (11) sentencia -> . PRINT
    (12) sentencia -> . EXIT
    (13) sentencia -> . ASIGNACION_ARR
    (14) sentencia -> . as_puntero
    (15) sentencia -> . IF
    (22) asignacion -> . asignado asigna exp PTCOMA
    (18) GOTO -> . t_goto iden PTCOMA
    (17) UNSET -> . t_unset par1 asignado par2 PTCOMA
    (19) PRINT -> . t_print par1 exp par2 PTCOMA
    (20) PRINT -> . t_print par1 exp par2 error
    (21) PRINT -> . error par1 exp par2 error
    (24) EXIT -> . t_exit PTCOMA
    (16) ASIGNACION_ARR -> . asignado L_ACCESOS asigna exp PTCOMA
    (23) as_puntero -> . asignado asigna depuntero asignado PTCOMA
    (5) IF -> . t_if par1 exp par2 GOTO
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila

    t_goto          shift and go to state 18
    t_unset         shift and go to state 19
    t_print         shift and go to state 20
    error           shift and go to state 21
    t_exit          shift and go to state 22
    t_if            shift and go to state 23
    temporal        shift and go to state 24
    puntero         shift and go to state 25
    direccion       shift and go to state 26
    parametro       shift and go to state 27
    devfunc         shift and go to state 28
    pila            shift and go to state 29

    sentencias                     shift and go to state 7
    sentencia                      shift and go to state 8
    asignacion                     shift and go to state 9
    GOTO                           shift and go to state 10
    UNSET                          shift and go to state 11
    PRINT                          shift and go to state 12
    EXIT                           shift and go to state 13
    ASIGNACION_ARR                 shift and go to state 14
    as_puntero                     shift and go to state 15
    IF                             shift and go to state 16
    asignado                       shift and go to state 17

state 7

    (7) etiqueta -> iden bipunto sentencias .
    (4) sentencias -> sentencias . sentencia
    (8) sentencia -> . asignacion
    (9) sentencia -> . GOTO
    (10) sentencia -> . UNSET
    (11) sentencia -> . PRINT
    (12) sentencia -> . EXIT
    (13) sentencia -> . ASIGNACION_ARR
    (14) sentencia -> . as_puntero
    (15) sentencia -> . IF
    (22) asignacion -> . asignado asigna exp PTCOMA
    (18) GOTO -> . t_goto iden PTCOMA
    (17) UNSET -> . t_unset par1 asignado par2 PTCOMA
    (19) PRINT -> . t_print par1 exp par2 PTCOMA
    (20) PRINT -> . t_print par1 exp par2 error
    (21) PRINT -> . error par1 exp par2 error
    (24) EXIT -> . t_exit PTCOMA
    (16) ASIGNACION_ARR -> . asignado L_ACCESOS asigna exp PTCOMA
    (23) as_puntero -> . asignado asigna depuntero asignado PTCOMA
    (5) IF -> . t_if par1 exp par2 GOTO
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila

    iden            reduce using rule 7 (etiqueta -> iden bipunto sentencias .)
    $end            reduce using rule 7 (etiqueta -> iden bipunto sentencias .)
    t_goto          shift and go to state 18
    t_unset         shift and go to state 19
    t_print         shift and go to state 20
    error           shift and go to state 21
    t_exit          shift and go to state 22
    t_if            shift and go to state 23
    temporal        shift and go to state 24
    puntero         shift and go to state 25
    direccion       shift and go to state 26
    parametro       shift and go to state 27
    devfunc         shift and go to state 28
    pila            shift and go to state 29

    sentencia                      shift and go to state 30
    asignacion                     shift and go to state 9
    GOTO                           shift and go to state 10
    UNSET                          shift and go to state 11
    PRINT                          shift and go to state 12
    EXIT                           shift and go to state 13
    ASIGNACION_ARR                 shift and go to state 14
    as_puntero                     shift and go to state 15
    IF                             shift and go to state 16
    asignado                       shift and go to state 17

state 8

    (6) sentencias -> sentencia .

    t_goto          reduce using rule 6 (sentencias -> sentencia .)
    t_unset         reduce using rule 6 (sentencias -> sentencia .)
    t_print         reduce using rule 6 (sentencias -> sentencia .)
    error           reduce using rule 6 (sentencias -> sentencia .)
    t_exit          reduce using rule 6 (sentencias -> sentencia .)
    t_if            reduce using rule 6 (sentencias -> sentencia .)
    temporal        reduce using rule 6 (sentencias -> sentencia .)
    puntero         reduce using rule 6 (sentencias -> sentencia .)
    direccion       reduce using rule 6 (sentencias -> sentencia .)
    parametro       reduce using rule 6 (sentencias -> sentencia .)
    devfunc         reduce using rule 6 (sentencias -> sentencia .)
    pila            reduce using rule 6 (sentencias -> sentencia .)
    iden            reduce using rule 6 (sentencias -> sentencia .)
    $end            reduce using rule 6 (sentencias -> sentencia .)


state 9

    (8) sentencia -> asignacion .

    t_goto          reduce using rule 8 (sentencia -> asignacion .)
    t_unset         reduce using rule 8 (sentencia -> asignacion .)
    t_print         reduce using rule 8 (sentencia -> asignacion .)
    error           reduce using rule 8 (sentencia -> asignacion .)
    t_exit          reduce using rule 8 (sentencia -> asignacion .)
    t_if            reduce using rule 8 (sentencia -> asignacion .)
    temporal        reduce using rule 8 (sentencia -> asignacion .)
    puntero         reduce using rule 8 (sentencia -> asignacion .)
    direccion       reduce using rule 8 (sentencia -> asignacion .)
    parametro       reduce using rule 8 (sentencia -> asignacion .)
    devfunc         reduce using rule 8 (sentencia -> asignacion .)
    pila            reduce using rule 8 (sentencia -> asignacion .)
    iden            reduce using rule 8 (sentencia -> asignacion .)
    $end            reduce using rule 8 (sentencia -> asignacion .)


state 10

    (9) sentencia -> GOTO .

    t_goto          reduce using rule 9 (sentencia -> GOTO .)
    t_unset         reduce using rule 9 (sentencia -> GOTO .)
    t_print         reduce using rule 9 (sentencia -> GOTO .)
    error           reduce using rule 9 (sentencia -> GOTO .)
    t_exit          reduce using rule 9 (sentencia -> GOTO .)
    t_if            reduce using rule 9 (sentencia -> GOTO .)
    temporal        reduce using rule 9 (sentencia -> GOTO .)
    puntero         reduce using rule 9 (sentencia -> GOTO .)
    direccion       reduce using rule 9 (sentencia -> GOTO .)
    parametro       reduce using rule 9 (sentencia -> GOTO .)
    devfunc         reduce using rule 9 (sentencia -> GOTO .)
    pila            reduce using rule 9 (sentencia -> GOTO .)
    iden            reduce using rule 9 (sentencia -> GOTO .)
    $end            reduce using rule 9 (sentencia -> GOTO .)


state 11

    (10) sentencia -> UNSET .

    t_goto          reduce using rule 10 (sentencia -> UNSET .)
    t_unset         reduce using rule 10 (sentencia -> UNSET .)
    t_print         reduce using rule 10 (sentencia -> UNSET .)
    error           reduce using rule 10 (sentencia -> UNSET .)
    t_exit          reduce using rule 10 (sentencia -> UNSET .)
    t_if            reduce using rule 10 (sentencia -> UNSET .)
    temporal        reduce using rule 10 (sentencia -> UNSET .)
    puntero         reduce using rule 10 (sentencia -> UNSET .)
    direccion       reduce using rule 10 (sentencia -> UNSET .)
    parametro       reduce using rule 10 (sentencia -> UNSET .)
    devfunc         reduce using rule 10 (sentencia -> UNSET .)
    pila            reduce using rule 10 (sentencia -> UNSET .)
    iden            reduce using rule 10 (sentencia -> UNSET .)
    $end            reduce using rule 10 (sentencia -> UNSET .)


state 12

    (11) sentencia -> PRINT .

    t_goto          reduce using rule 11 (sentencia -> PRINT .)
    t_unset         reduce using rule 11 (sentencia -> PRINT .)
    t_print         reduce using rule 11 (sentencia -> PRINT .)
    error           reduce using rule 11 (sentencia -> PRINT .)
    t_exit          reduce using rule 11 (sentencia -> PRINT .)
    t_if            reduce using rule 11 (sentencia -> PRINT .)
    temporal        reduce using rule 11 (sentencia -> PRINT .)
    puntero         reduce using rule 11 (sentencia -> PRINT .)
    direccion       reduce using rule 11 (sentencia -> PRINT .)
    parametro       reduce using rule 11 (sentencia -> PRINT .)
    devfunc         reduce using rule 11 (sentencia -> PRINT .)
    pila            reduce using rule 11 (sentencia -> PRINT .)
    iden            reduce using rule 11 (sentencia -> PRINT .)
    $end            reduce using rule 11 (sentencia -> PRINT .)


state 13

    (12) sentencia -> EXIT .

    t_goto          reduce using rule 12 (sentencia -> EXIT .)
    t_unset         reduce using rule 12 (sentencia -> EXIT .)
    t_print         reduce using rule 12 (sentencia -> EXIT .)
    error           reduce using rule 12 (sentencia -> EXIT .)
    t_exit          reduce using rule 12 (sentencia -> EXIT .)
    t_if            reduce using rule 12 (sentencia -> EXIT .)
    temporal        reduce using rule 12 (sentencia -> EXIT .)
    puntero         reduce using rule 12 (sentencia -> EXIT .)
    direccion       reduce using rule 12 (sentencia -> EXIT .)
    parametro       reduce using rule 12 (sentencia -> EXIT .)
    devfunc         reduce using rule 12 (sentencia -> EXIT .)
    pila            reduce using rule 12 (sentencia -> EXIT .)
    iden            reduce using rule 12 (sentencia -> EXIT .)
    $end            reduce using rule 12 (sentencia -> EXIT .)


state 14

    (13) sentencia -> ASIGNACION_ARR .

    t_goto          reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    t_unset         reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    t_print         reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    error           reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    t_exit          reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    t_if            reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    temporal        reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    puntero         reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    direccion       reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    parametro       reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    devfunc         reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    pila            reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    iden            reduce using rule 13 (sentencia -> ASIGNACION_ARR .)
    $end            reduce using rule 13 (sentencia -> ASIGNACION_ARR .)


state 15

    (14) sentencia -> as_puntero .

    t_goto          reduce using rule 14 (sentencia -> as_puntero .)
    t_unset         reduce using rule 14 (sentencia -> as_puntero .)
    t_print         reduce using rule 14 (sentencia -> as_puntero .)
    error           reduce using rule 14 (sentencia -> as_puntero .)
    t_exit          reduce using rule 14 (sentencia -> as_puntero .)
    t_if            reduce using rule 14 (sentencia -> as_puntero .)
    temporal        reduce using rule 14 (sentencia -> as_puntero .)
    puntero         reduce using rule 14 (sentencia -> as_puntero .)
    direccion       reduce using rule 14 (sentencia -> as_puntero .)
    parametro       reduce using rule 14 (sentencia -> as_puntero .)
    devfunc         reduce using rule 14 (sentencia -> as_puntero .)
    pila            reduce using rule 14 (sentencia -> as_puntero .)
    iden            reduce using rule 14 (sentencia -> as_puntero .)
    $end            reduce using rule 14 (sentencia -> as_puntero .)


state 16

    (15) sentencia -> IF .

    t_goto          reduce using rule 15 (sentencia -> IF .)
    t_unset         reduce using rule 15 (sentencia -> IF .)
    t_print         reduce using rule 15 (sentencia -> IF .)
    error           reduce using rule 15 (sentencia -> IF .)
    t_exit          reduce using rule 15 (sentencia -> IF .)
    t_if            reduce using rule 15 (sentencia -> IF .)
    temporal        reduce using rule 15 (sentencia -> IF .)
    puntero         reduce using rule 15 (sentencia -> IF .)
    direccion       reduce using rule 15 (sentencia -> IF .)
    parametro       reduce using rule 15 (sentencia -> IF .)
    devfunc         reduce using rule 15 (sentencia -> IF .)
    pila            reduce using rule 15 (sentencia -> IF .)
    iden            reduce using rule 15 (sentencia -> IF .)
    $end            reduce using rule 15 (sentencia -> IF .)


state 17

    (22) asignacion -> asignado . asigna exp PTCOMA
    (16) ASIGNACION_ARR -> asignado . L_ACCESOS asigna exp PTCOMA
    (23) as_puntero -> asignado . asigna depuntero asignado PTCOMA
    (62) L_ACCESOS -> . L_ACCESOS acceso
    (63) L_ACCESOS -> . acceso
    (64) acceso -> . cor1 exp8 cor2

    asigna          shift and go to state 31
    cor1            shift and go to state 34

    L_ACCESOS                      shift and go to state 32
    acceso                         shift and go to state 33

state 18

    (18) GOTO -> t_goto . iden PTCOMA

    iden            shift and go to state 35


state 19

    (17) UNSET -> t_unset . par1 asignado par2 PTCOMA

    par1            shift and go to state 36


state 20

    (19) PRINT -> t_print . par1 exp par2 PTCOMA
    (20) PRINT -> t_print . par1 exp par2 error

    par1            shift and go to state 37


state 21

    (21) PRINT -> error . par1 exp par2 error

    par1            shift and go to state 38


state 22

    (24) EXIT -> t_exit . PTCOMA

    PTCOMA          shift and go to state 39


state 23

    (5) IF -> t_if . par1 exp par2 GOTO

    par1            shift and go to state 40


state 24

    (25) asignado -> temporal .

    asigna          reduce using rule 25 (asignado -> temporal .)
    cor1            reduce using rule 25 (asignado -> temporal .)
    par2            reduce using rule 25 (asignado -> temporal .)
    PTCOMA          reduce using rule 25 (asignado -> temporal .)


state 25

    (26) asignado -> puntero .

    asigna          reduce using rule 26 (asignado -> puntero .)
    cor1            reduce using rule 26 (asignado -> puntero .)
    par2            reduce using rule 26 (asignado -> puntero .)
    PTCOMA          reduce using rule 26 (asignado -> puntero .)


state 26

    (27) asignado -> direccion .

    asigna          reduce using rule 27 (asignado -> direccion .)
    cor1            reduce using rule 27 (asignado -> direccion .)
    par2            reduce using rule 27 (asignado -> direccion .)
    PTCOMA          reduce using rule 27 (asignado -> direccion .)


state 27

    (28) asignado -> parametro .

    asigna          reduce using rule 28 (asignado -> parametro .)
    cor1            reduce using rule 28 (asignado -> parametro .)
    par2            reduce using rule 28 (asignado -> parametro .)
    PTCOMA          reduce using rule 28 (asignado -> parametro .)


state 28

    (29) asignado -> devfunc .

    asigna          reduce using rule 29 (asignado -> devfunc .)
    cor1            reduce using rule 29 (asignado -> devfunc .)
    par2            reduce using rule 29 (asignado -> devfunc .)
    PTCOMA          reduce using rule 29 (asignado -> devfunc .)


state 29

    (30) asignado -> pila .

    asigna          reduce using rule 30 (asignado -> pila .)
    cor1            reduce using rule 30 (asignado -> pila .)
    par2            reduce using rule 30 (asignado -> pila .)
    PTCOMA          reduce using rule 30 (asignado -> pila .)


state 30

    (4) sentencias -> sentencias sentencia .

    t_goto          reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_unset         reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_print         reduce using rule 4 (sentencias -> sentencias sentencia .)
    error           reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_exit          reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_if            reduce using rule 4 (sentencias -> sentencias sentencia .)
    temporal        reduce using rule 4 (sentencias -> sentencias sentencia .)
    puntero         reduce using rule 4 (sentencias -> sentencias sentencia .)
    direccion       reduce using rule 4 (sentencias -> sentencias sentencia .)
    parametro       reduce using rule 4 (sentencias -> sentencias sentencia .)
    devfunc         reduce using rule 4 (sentencias -> sentencias sentencia .)
    pila            reduce using rule 4 (sentencias -> sentencias sentencia .)
    iden            reduce using rule 4 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 4 (sentencias -> sentencias sentencia .)


state 31

    (22) asignacion -> asignado asigna . exp PTCOMA
    (23) as_puntero -> asignado asigna . depuntero asignado PTCOMA
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    depuntero       shift and go to state 43
    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    asignado                       shift and go to state 41
    exp                            shift and go to state 42
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    exp8                           shift and go to state 57

state 32

    (16) ASIGNACION_ARR -> asignado L_ACCESOS . asigna exp PTCOMA
    (62) L_ACCESOS -> L_ACCESOS . acceso
    (64) acceso -> . cor1 exp8 cor2

    asigna          shift and go to state 70
    cor1            shift and go to state 34

    acceso                         shift and go to state 71

state 33

    (63) L_ACCESOS -> acceso .

    asigna          reduce using rule 63 (L_ACCESOS -> acceso .)
    cor1            reduce using rule 63 (L_ACCESOS -> acceso .)
    por             reduce using rule 63 (L_ACCESOS -> acceso .)
    div             reduce using rule 63 (L_ACCESOS -> acceso .)
    mod             reduce using rule 63 (L_ACCESOS -> acceso .)
    mas             reduce using rule 63 (L_ACCESOS -> acceso .)
    res             reduce using rule 63 (L_ACCESOS -> acceso .)
    mayor           reduce using rule 63 (L_ACCESOS -> acceso .)
    mayori          reduce using rule 63 (L_ACCESOS -> acceso .)
    menor           reduce using rule 63 (L_ACCESOS -> acceso .)
    menori          reduce using rule 63 (L_ACCESOS -> acceso .)
    igual           reduce using rule 63 (L_ACCESOS -> acceso .)
    diferente       reduce using rule 63 (L_ACCESOS -> acceso .)
    band            reduce using rule 63 (L_ACCESOS -> acceso .)
    and             reduce using rule 63 (L_ACCESOS -> acceso .)
    bor             reduce using rule 63 (L_ACCESOS -> acceso .)
    or              reduce using rule 63 (L_ACCESOS -> acceso .)
    shiftizq        reduce using rule 63 (L_ACCESOS -> acceso .)
    shiftder        reduce using rule 63 (L_ACCESOS -> acceso .)
    bxor            reduce using rule 63 (L_ACCESOS -> acceso .)
    t_xor           reduce using rule 63 (L_ACCESOS -> acceso .)
    PTCOMA          reduce using rule 63 (L_ACCESOS -> acceso .)
    par2            reduce using rule 63 (L_ACCESOS -> acceso .)
    cor2            reduce using rule 63 (L_ACCESOS -> acceso .)


state 34

    (64) acceso -> cor1 . exp8 cor2
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    temporal        shift and go to state 73
    puntero         shift and go to state 74
    direccion       shift and go to state 75
    parametro       shift and go to state 76
    devfunc         shift and go to state 77
    pila            shift and go to state 78
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp8                           shift and go to state 72

state 35

    (18) GOTO -> t_goto iden . PTCOMA

    PTCOMA          shift and go to state 79


state 36

    (17) UNSET -> t_unset par1 . asignado par2 PTCOMA
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila

    temporal        shift and go to state 24
    puntero         shift and go to state 25
    direccion       shift and go to state 26
    parametro       shift and go to state 27
    devfunc         shift and go to state 28
    pila            shift and go to state 29

    asignado                       shift and go to state 80

state 37

    (19) PRINT -> t_print par1 . exp par2 PTCOMA
    (20) PRINT -> t_print par1 . exp par2 error
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 81
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 38

    (21) PRINT -> error par1 . exp par2 error
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 82
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 39

    (24) EXIT -> t_exit PTCOMA .

    t_goto          reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    t_unset         reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    t_print         reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    error           reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    t_exit          reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    t_if            reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    temporal        reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    puntero         reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    direccion       reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    parametro       reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    devfunc         reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    pila            reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    iden            reduce using rule 24 (EXIT -> t_exit PTCOMA .)
    $end            reduce using rule 24 (EXIT -> t_exit PTCOMA .)


state 40

    (5) IF -> t_if par1 . exp par2 GOTO
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 83
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 41

    (61) exp11 -> asignado . L_ACCESOS
    (62) L_ACCESOS -> . L_ACCESOS acceso
    (63) L_ACCESOS -> . acceso
    (64) acceso -> . cor1 exp8 cor2

    cor1            shift and go to state 34

    L_ACCESOS                      shift and go to state 84
    acceso                         shift and go to state 33

state 42

    (22) asignacion -> asignado asigna exp . PTCOMA

    PTCOMA          shift and go to state 85


state 43

    (23) as_puntero -> asignado asigna depuntero . asignado PTCOMA
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila

    temporal        shift and go to state 24
    puntero         shift and go to state 25
    direccion       shift and go to state 26
    parametro       shift and go to state 27
    devfunc         shift and go to state 28
    pila            shift and go to state 29

    asignado                       shift and go to state 86

state 44

    (31) exp -> exp1 . bxor exp1
    (32) exp -> exp1 . t_xor exp1
    (33) exp -> exp1 .

  ! shift/reduce conflict for bxor resolved as shift
  ! shift/reduce conflict for t_xor resolved as shift
    bxor            shift and go to state 87
    t_xor           shift and go to state 88
    PTCOMA          reduce using rule 33 (exp -> exp1 .)
    par2            reduce using rule 33 (exp -> exp1 .)
    por             reduce using rule 33 (exp -> exp1 .)
    div             reduce using rule 33 (exp -> exp1 .)
    mod             reduce using rule 33 (exp -> exp1 .)
    mas             reduce using rule 33 (exp -> exp1 .)
    res             reduce using rule 33 (exp -> exp1 .)
    mayor           reduce using rule 33 (exp -> exp1 .)
    mayori          reduce using rule 33 (exp -> exp1 .)
    menor           reduce using rule 33 (exp -> exp1 .)
    menori          reduce using rule 33 (exp -> exp1 .)
    igual           reduce using rule 33 (exp -> exp1 .)
    diferente       reduce using rule 33 (exp -> exp1 .)
    band            reduce using rule 33 (exp -> exp1 .)
    and             reduce using rule 33 (exp -> exp1 .)
    bor             reduce using rule 33 (exp -> exp1 .)
    or              reduce using rule 33 (exp -> exp1 .)
    shiftizq        reduce using rule 33 (exp -> exp1 .)
    shiftder        reduce using rule 33 (exp -> exp1 .)
    cor2            reduce using rule 33 (exp -> exp1 .)

  ! bxor            [ reduce using rule 33 (exp -> exp1 .) ]
  ! t_xor           [ reduce using rule 33 (exp -> exp1 .) ]


state 45

    (34) exp1 -> exp2 . bor exp2
    (35) exp1 -> exp2 . or exp2
    (36) exp1 -> exp2 . shiftizq exp2
    (37) exp1 -> exp2 . shiftder exp2
    (38) exp1 -> exp2 .

  ! shift/reduce conflict for bor resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for shiftizq resolved as shift
  ! shift/reduce conflict for shiftder resolved as shift
    bor             shift and go to state 89
    or              shift and go to state 90
    shiftizq        shift and go to state 91
    shiftder        shift and go to state 92
    bxor            reduce using rule 38 (exp1 -> exp2 .)
    t_xor           reduce using rule 38 (exp1 -> exp2 .)
    PTCOMA          reduce using rule 38 (exp1 -> exp2 .)
    par2            reduce using rule 38 (exp1 -> exp2 .)
    por             reduce using rule 38 (exp1 -> exp2 .)
    div             reduce using rule 38 (exp1 -> exp2 .)
    mod             reduce using rule 38 (exp1 -> exp2 .)
    mas             reduce using rule 38 (exp1 -> exp2 .)
    res             reduce using rule 38 (exp1 -> exp2 .)
    mayor           reduce using rule 38 (exp1 -> exp2 .)
    mayori          reduce using rule 38 (exp1 -> exp2 .)
    menor           reduce using rule 38 (exp1 -> exp2 .)
    menori          reduce using rule 38 (exp1 -> exp2 .)
    igual           reduce using rule 38 (exp1 -> exp2 .)
    diferente       reduce using rule 38 (exp1 -> exp2 .)
    band            reduce using rule 38 (exp1 -> exp2 .)
    and             reduce using rule 38 (exp1 -> exp2 .)
    cor2            reduce using rule 38 (exp1 -> exp2 .)

  ! bor             [ reduce using rule 38 (exp1 -> exp2 .) ]
  ! or              [ reduce using rule 38 (exp1 -> exp2 .) ]
  ! shiftizq        [ reduce using rule 38 (exp1 -> exp2 .) ]
  ! shiftder        [ reduce using rule 38 (exp1 -> exp2 .) ]


state 46

    (39) exp2 -> exp3 . band exp3
    (40) exp2 -> exp3 . and exp3
    (41) exp2 -> exp3 .

  ! shift/reduce conflict for band resolved as shift
  ! shift/reduce conflict for and resolved as shift
    band            shift and go to state 93
    and             shift and go to state 94
    bor             reduce using rule 41 (exp2 -> exp3 .)
    or              reduce using rule 41 (exp2 -> exp3 .)
    shiftizq        reduce using rule 41 (exp2 -> exp3 .)
    shiftder        reduce using rule 41 (exp2 -> exp3 .)
    bxor            reduce using rule 41 (exp2 -> exp3 .)
    t_xor           reduce using rule 41 (exp2 -> exp3 .)
    PTCOMA          reduce using rule 41 (exp2 -> exp3 .)
    par2            reduce using rule 41 (exp2 -> exp3 .)
    por             reduce using rule 41 (exp2 -> exp3 .)
    div             reduce using rule 41 (exp2 -> exp3 .)
    mod             reduce using rule 41 (exp2 -> exp3 .)
    mas             reduce using rule 41 (exp2 -> exp3 .)
    res             reduce using rule 41 (exp2 -> exp3 .)
    mayor           reduce using rule 41 (exp2 -> exp3 .)
    mayori          reduce using rule 41 (exp2 -> exp3 .)
    menor           reduce using rule 41 (exp2 -> exp3 .)
    menori          reduce using rule 41 (exp2 -> exp3 .)
    igual           reduce using rule 41 (exp2 -> exp3 .)
    diferente       reduce using rule 41 (exp2 -> exp3 .)
    cor2            reduce using rule 41 (exp2 -> exp3 .)

  ! band            [ reduce using rule 41 (exp2 -> exp3 .) ]
  ! and             [ reduce using rule 41 (exp2 -> exp3 .) ]


state 47

    (42) exp3 -> exp4 . igual exp4
    (43) exp3 -> exp4 . diferente exp4
    (44) exp3 -> exp4 .

  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
    igual           shift and go to state 95
    diferente       shift and go to state 96
    band            reduce using rule 44 (exp3 -> exp4 .)
    and             reduce using rule 44 (exp3 -> exp4 .)
    bor             reduce using rule 44 (exp3 -> exp4 .)
    or              reduce using rule 44 (exp3 -> exp4 .)
    shiftizq        reduce using rule 44 (exp3 -> exp4 .)
    shiftder        reduce using rule 44 (exp3 -> exp4 .)
    bxor            reduce using rule 44 (exp3 -> exp4 .)
    t_xor           reduce using rule 44 (exp3 -> exp4 .)
    PTCOMA          reduce using rule 44 (exp3 -> exp4 .)
    par2            reduce using rule 44 (exp3 -> exp4 .)
    por             reduce using rule 44 (exp3 -> exp4 .)
    div             reduce using rule 44 (exp3 -> exp4 .)
    mod             reduce using rule 44 (exp3 -> exp4 .)
    mas             reduce using rule 44 (exp3 -> exp4 .)
    res             reduce using rule 44 (exp3 -> exp4 .)
    mayor           reduce using rule 44 (exp3 -> exp4 .)
    mayori          reduce using rule 44 (exp3 -> exp4 .)
    menor           reduce using rule 44 (exp3 -> exp4 .)
    menori          reduce using rule 44 (exp3 -> exp4 .)
    cor2            reduce using rule 44 (exp3 -> exp4 .)

  ! igual           [ reduce using rule 44 (exp3 -> exp4 .) ]
  ! diferente       [ reduce using rule 44 (exp3 -> exp4 .) ]


state 48

    (45) exp4 -> exp5 . mayor exp5
    (46) exp4 -> exp5 . mayori exp5
    (47) exp4 -> exp5 . menor exp5
    (48) exp4 -> exp5 . menori exp5
    (49) exp4 -> exp5 .

  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for mayori resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for menori resolved as shift
    mayor           shift and go to state 97
    mayori          shift and go to state 98
    menor           shift and go to state 99
    menori          shift and go to state 100
    igual           reduce using rule 49 (exp4 -> exp5 .)
    diferente       reduce using rule 49 (exp4 -> exp5 .)
    band            reduce using rule 49 (exp4 -> exp5 .)
    and             reduce using rule 49 (exp4 -> exp5 .)
    bor             reduce using rule 49 (exp4 -> exp5 .)
    or              reduce using rule 49 (exp4 -> exp5 .)
    shiftizq        reduce using rule 49 (exp4 -> exp5 .)
    shiftder        reduce using rule 49 (exp4 -> exp5 .)
    bxor            reduce using rule 49 (exp4 -> exp5 .)
    t_xor           reduce using rule 49 (exp4 -> exp5 .)
    PTCOMA          reduce using rule 49 (exp4 -> exp5 .)
    par2            reduce using rule 49 (exp4 -> exp5 .)
    por             reduce using rule 49 (exp4 -> exp5 .)
    div             reduce using rule 49 (exp4 -> exp5 .)
    mod             reduce using rule 49 (exp4 -> exp5 .)
    mas             reduce using rule 49 (exp4 -> exp5 .)
    res             reduce using rule 49 (exp4 -> exp5 .)
    cor2            reduce using rule 49 (exp4 -> exp5 .)

  ! mayor           [ reduce using rule 49 (exp4 -> exp5 .) ]
  ! mayori          [ reduce using rule 49 (exp4 -> exp5 .) ]
  ! menor           [ reduce using rule 49 (exp4 -> exp5 .) ]
  ! menori          [ reduce using rule 49 (exp4 -> exp5 .) ]


state 49

    (50) exp5 -> exp6 . mas exp6
    (51) exp5 -> exp6 . res exp6
    (52) exp5 -> exp6 .

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for res resolved as shift
    mas             shift and go to state 101
    res             shift and go to state 102
    mayor           reduce using rule 52 (exp5 -> exp6 .)
    mayori          reduce using rule 52 (exp5 -> exp6 .)
    menor           reduce using rule 52 (exp5 -> exp6 .)
    menori          reduce using rule 52 (exp5 -> exp6 .)
    igual           reduce using rule 52 (exp5 -> exp6 .)
    diferente       reduce using rule 52 (exp5 -> exp6 .)
    band            reduce using rule 52 (exp5 -> exp6 .)
    and             reduce using rule 52 (exp5 -> exp6 .)
    bor             reduce using rule 52 (exp5 -> exp6 .)
    or              reduce using rule 52 (exp5 -> exp6 .)
    shiftizq        reduce using rule 52 (exp5 -> exp6 .)
    shiftder        reduce using rule 52 (exp5 -> exp6 .)
    bxor            reduce using rule 52 (exp5 -> exp6 .)
    t_xor           reduce using rule 52 (exp5 -> exp6 .)
    PTCOMA          reduce using rule 52 (exp5 -> exp6 .)
    par2            reduce using rule 52 (exp5 -> exp6 .)
    por             reduce using rule 52 (exp5 -> exp6 .)
    div             reduce using rule 52 (exp5 -> exp6 .)
    mod             reduce using rule 52 (exp5 -> exp6 .)
    cor2            reduce using rule 52 (exp5 -> exp6 .)

  ! mas             [ reduce using rule 52 (exp5 -> exp6 .) ]
  ! res             [ reduce using rule 52 (exp5 -> exp6 .) ]


state 50

    (58) exp7 -> res . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp11                          shift and go to state 103
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 51

    (53) exp6 -> exp7 . por exp7
    (54) exp6 -> exp7 . div exp7
    (55) exp6 -> exp7 . mod exp7
    (57) exp6 -> exp7 .

  ! shift/reduce conflict for por resolved as shift
  ! shift/reduce conflict for div resolved as shift
  ! shift/reduce conflict for mod resolved as shift
    por             shift and go to state 104
    div             shift and go to state 105
    mod             shift and go to state 106
    mas             reduce using rule 57 (exp6 -> exp7 .)
    res             reduce using rule 57 (exp6 -> exp7 .)
    mayor           reduce using rule 57 (exp6 -> exp7 .)
    mayori          reduce using rule 57 (exp6 -> exp7 .)
    menor           reduce using rule 57 (exp6 -> exp7 .)
    menori          reduce using rule 57 (exp6 -> exp7 .)
    igual           reduce using rule 57 (exp6 -> exp7 .)
    diferente       reduce using rule 57 (exp6 -> exp7 .)
    band            reduce using rule 57 (exp6 -> exp7 .)
    and             reduce using rule 57 (exp6 -> exp7 .)
    bor             reduce using rule 57 (exp6 -> exp7 .)
    or              reduce using rule 57 (exp6 -> exp7 .)
    shiftizq        reduce using rule 57 (exp6 -> exp7 .)
    shiftder        reduce using rule 57 (exp6 -> exp7 .)
    bxor            reduce using rule 57 (exp6 -> exp7 .)
    t_xor           reduce using rule 57 (exp6 -> exp7 .)
    PTCOMA          reduce using rule 57 (exp6 -> exp7 .)
    par2            reduce using rule 57 (exp6 -> exp7 .)
    cor2            reduce using rule 57 (exp6 -> exp7 .)

  ! por             [ reduce using rule 57 (exp6 -> exp7 .) ]
  ! div             [ reduce using rule 57 (exp6 -> exp7 .) ]
  ! mod             [ reduce using rule 57 (exp6 -> exp7 .) ]


state 52

    (56) exp6 -> t_abs . par1 exp7 par2

    par1            shift and go to state 107


state 53

    (77) exp8 -> par1 . t_int par2 exp
    (78) exp8 -> par1 . t_float par2 exp
    (79) exp8 -> par1 . t_char par2 exp

    t_int           shift and go to state 108
    t_float         shift and go to state 109
    t_char          shift and go to state 110


state 54

    (66) exp7 -> exp11 .

    por             reduce using rule 66 (exp7 -> exp11 .)
    div             reduce using rule 66 (exp7 -> exp11 .)
    mod             reduce using rule 66 (exp7 -> exp11 .)
    mas             reduce using rule 66 (exp7 -> exp11 .)
    res             reduce using rule 66 (exp7 -> exp11 .)
    mayor           reduce using rule 66 (exp7 -> exp11 .)
    mayori          reduce using rule 66 (exp7 -> exp11 .)
    menor           reduce using rule 66 (exp7 -> exp11 .)
    menori          reduce using rule 66 (exp7 -> exp11 .)
    igual           reduce using rule 66 (exp7 -> exp11 .)
    diferente       reduce using rule 66 (exp7 -> exp11 .)
    band            reduce using rule 66 (exp7 -> exp11 .)
    and             reduce using rule 66 (exp7 -> exp11 .)
    bor             reduce using rule 66 (exp7 -> exp11 .)
    or              reduce using rule 66 (exp7 -> exp11 .)
    shiftizq        reduce using rule 66 (exp7 -> exp11 .)
    shiftder        reduce using rule 66 (exp7 -> exp11 .)
    bxor            reduce using rule 66 (exp7 -> exp11 .)
    t_xor           reduce using rule 66 (exp7 -> exp11 .)
    PTCOMA          reduce using rule 66 (exp7 -> exp11 .)
    par2            reduce using rule 66 (exp7 -> exp11 .)
    cor2            reduce using rule 66 (exp7 -> exp11 .)


state 55

    (59) exp7 -> not . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp11                          shift and go to state 111
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 56

    (60) exp7 -> bnot . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp11                          shift and go to state 112
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 57

    (65) exp11 -> exp8 .

    por             reduce using rule 65 (exp11 -> exp8 .)
    div             reduce using rule 65 (exp11 -> exp8 .)
    mod             reduce using rule 65 (exp11 -> exp8 .)
    mas             reduce using rule 65 (exp11 -> exp8 .)
    res             reduce using rule 65 (exp11 -> exp8 .)
    mayor           reduce using rule 65 (exp11 -> exp8 .)
    mayori          reduce using rule 65 (exp11 -> exp8 .)
    menor           reduce using rule 65 (exp11 -> exp8 .)
    menori          reduce using rule 65 (exp11 -> exp8 .)
    igual           reduce using rule 65 (exp11 -> exp8 .)
    diferente       reduce using rule 65 (exp11 -> exp8 .)
    band            reduce using rule 65 (exp11 -> exp8 .)
    and             reduce using rule 65 (exp11 -> exp8 .)
    bor             reduce using rule 65 (exp11 -> exp8 .)
    or              reduce using rule 65 (exp11 -> exp8 .)
    shiftizq        reduce using rule 65 (exp11 -> exp8 .)
    shiftder        reduce using rule 65 (exp11 -> exp8 .)
    bxor            reduce using rule 65 (exp11 -> exp8 .)
    t_xor           reduce using rule 65 (exp11 -> exp8 .)
    PTCOMA          reduce using rule 65 (exp11 -> exp8 .)
    par2            reduce using rule 65 (exp11 -> exp8 .)
    cor2            reduce using rule 65 (exp11 -> exp8 .)


state 58

    (25) asignado -> temporal .
    (71) exp8 -> temporal .

    cor1            reduce using rule 25 (asignado -> temporal .)
    por             reduce using rule 71 (exp8 -> temporal .)
    div             reduce using rule 71 (exp8 -> temporal .)
    mod             reduce using rule 71 (exp8 -> temporal .)
    mas             reduce using rule 71 (exp8 -> temporal .)
    res             reduce using rule 71 (exp8 -> temporal .)
    mayor           reduce using rule 71 (exp8 -> temporal .)
    mayori          reduce using rule 71 (exp8 -> temporal .)
    menor           reduce using rule 71 (exp8 -> temporal .)
    menori          reduce using rule 71 (exp8 -> temporal .)
    igual           reduce using rule 71 (exp8 -> temporal .)
    diferente       reduce using rule 71 (exp8 -> temporal .)
    band            reduce using rule 71 (exp8 -> temporal .)
    and             reduce using rule 71 (exp8 -> temporal .)
    bor             reduce using rule 71 (exp8 -> temporal .)
    or              reduce using rule 71 (exp8 -> temporal .)
    shiftizq        reduce using rule 71 (exp8 -> temporal .)
    shiftder        reduce using rule 71 (exp8 -> temporal .)
    bxor            reduce using rule 71 (exp8 -> temporal .)
    t_xor           reduce using rule 71 (exp8 -> temporal .)
    PTCOMA          reduce using rule 71 (exp8 -> temporal .)
    par2            reduce using rule 71 (exp8 -> temporal .)
    cor2            reduce using rule 71 (exp8 -> temporal .)


state 59

    (26) asignado -> puntero .
    (72) exp8 -> puntero .

    cor1            reduce using rule 26 (asignado -> puntero .)
    por             reduce using rule 72 (exp8 -> puntero .)
    div             reduce using rule 72 (exp8 -> puntero .)
    mod             reduce using rule 72 (exp8 -> puntero .)
    mas             reduce using rule 72 (exp8 -> puntero .)
    res             reduce using rule 72 (exp8 -> puntero .)
    mayor           reduce using rule 72 (exp8 -> puntero .)
    mayori          reduce using rule 72 (exp8 -> puntero .)
    menor           reduce using rule 72 (exp8 -> puntero .)
    menori          reduce using rule 72 (exp8 -> puntero .)
    igual           reduce using rule 72 (exp8 -> puntero .)
    diferente       reduce using rule 72 (exp8 -> puntero .)
    band            reduce using rule 72 (exp8 -> puntero .)
    and             reduce using rule 72 (exp8 -> puntero .)
    bor             reduce using rule 72 (exp8 -> puntero .)
    or              reduce using rule 72 (exp8 -> puntero .)
    shiftizq        reduce using rule 72 (exp8 -> puntero .)
    shiftder        reduce using rule 72 (exp8 -> puntero .)
    bxor            reduce using rule 72 (exp8 -> puntero .)
    t_xor           reduce using rule 72 (exp8 -> puntero .)
    PTCOMA          reduce using rule 72 (exp8 -> puntero .)
    par2            reduce using rule 72 (exp8 -> puntero .)
    cor2            reduce using rule 72 (exp8 -> puntero .)


state 60

    (27) asignado -> direccion .
    (73) exp8 -> direccion .

    cor1            reduce using rule 27 (asignado -> direccion .)
    por             reduce using rule 73 (exp8 -> direccion .)
    div             reduce using rule 73 (exp8 -> direccion .)
    mod             reduce using rule 73 (exp8 -> direccion .)
    mas             reduce using rule 73 (exp8 -> direccion .)
    res             reduce using rule 73 (exp8 -> direccion .)
    mayor           reduce using rule 73 (exp8 -> direccion .)
    mayori          reduce using rule 73 (exp8 -> direccion .)
    menor           reduce using rule 73 (exp8 -> direccion .)
    menori          reduce using rule 73 (exp8 -> direccion .)
    igual           reduce using rule 73 (exp8 -> direccion .)
    diferente       reduce using rule 73 (exp8 -> direccion .)
    band            reduce using rule 73 (exp8 -> direccion .)
    and             reduce using rule 73 (exp8 -> direccion .)
    bor             reduce using rule 73 (exp8 -> direccion .)
    or              reduce using rule 73 (exp8 -> direccion .)
    shiftizq        reduce using rule 73 (exp8 -> direccion .)
    shiftder        reduce using rule 73 (exp8 -> direccion .)
    bxor            reduce using rule 73 (exp8 -> direccion .)
    t_xor           reduce using rule 73 (exp8 -> direccion .)
    PTCOMA          reduce using rule 73 (exp8 -> direccion .)
    par2            reduce using rule 73 (exp8 -> direccion .)
    cor2            reduce using rule 73 (exp8 -> direccion .)


state 61

    (28) asignado -> parametro .
    (74) exp8 -> parametro .

    cor1            reduce using rule 28 (asignado -> parametro .)
    por             reduce using rule 74 (exp8 -> parametro .)
    div             reduce using rule 74 (exp8 -> parametro .)
    mod             reduce using rule 74 (exp8 -> parametro .)
    mas             reduce using rule 74 (exp8 -> parametro .)
    res             reduce using rule 74 (exp8 -> parametro .)
    mayor           reduce using rule 74 (exp8 -> parametro .)
    mayori          reduce using rule 74 (exp8 -> parametro .)
    menor           reduce using rule 74 (exp8 -> parametro .)
    menori          reduce using rule 74 (exp8 -> parametro .)
    igual           reduce using rule 74 (exp8 -> parametro .)
    diferente       reduce using rule 74 (exp8 -> parametro .)
    band            reduce using rule 74 (exp8 -> parametro .)
    and             reduce using rule 74 (exp8 -> parametro .)
    bor             reduce using rule 74 (exp8 -> parametro .)
    or              reduce using rule 74 (exp8 -> parametro .)
    shiftizq        reduce using rule 74 (exp8 -> parametro .)
    shiftder        reduce using rule 74 (exp8 -> parametro .)
    bxor            reduce using rule 74 (exp8 -> parametro .)
    t_xor           reduce using rule 74 (exp8 -> parametro .)
    PTCOMA          reduce using rule 74 (exp8 -> parametro .)
    par2            reduce using rule 74 (exp8 -> parametro .)
    cor2            reduce using rule 74 (exp8 -> parametro .)


state 62

    (29) asignado -> devfunc .
    (75) exp8 -> devfunc .

    cor1            reduce using rule 29 (asignado -> devfunc .)
    por             reduce using rule 75 (exp8 -> devfunc .)
    div             reduce using rule 75 (exp8 -> devfunc .)
    mod             reduce using rule 75 (exp8 -> devfunc .)
    mas             reduce using rule 75 (exp8 -> devfunc .)
    res             reduce using rule 75 (exp8 -> devfunc .)
    mayor           reduce using rule 75 (exp8 -> devfunc .)
    mayori          reduce using rule 75 (exp8 -> devfunc .)
    menor           reduce using rule 75 (exp8 -> devfunc .)
    menori          reduce using rule 75 (exp8 -> devfunc .)
    igual           reduce using rule 75 (exp8 -> devfunc .)
    diferente       reduce using rule 75 (exp8 -> devfunc .)
    band            reduce using rule 75 (exp8 -> devfunc .)
    and             reduce using rule 75 (exp8 -> devfunc .)
    bor             reduce using rule 75 (exp8 -> devfunc .)
    or              reduce using rule 75 (exp8 -> devfunc .)
    shiftizq        reduce using rule 75 (exp8 -> devfunc .)
    shiftder        reduce using rule 75 (exp8 -> devfunc .)
    bxor            reduce using rule 75 (exp8 -> devfunc .)
    t_xor           reduce using rule 75 (exp8 -> devfunc .)
    PTCOMA          reduce using rule 75 (exp8 -> devfunc .)
    par2            reduce using rule 75 (exp8 -> devfunc .)
    cor2            reduce using rule 75 (exp8 -> devfunc .)


state 63

    (30) asignado -> pila .
    (76) exp8 -> pila .

    cor1            reduce using rule 30 (asignado -> pila .)
    por             reduce using rule 76 (exp8 -> pila .)
    div             reduce using rule 76 (exp8 -> pila .)
    mod             reduce using rule 76 (exp8 -> pila .)
    mas             reduce using rule 76 (exp8 -> pila .)
    res             reduce using rule 76 (exp8 -> pila .)
    mayor           reduce using rule 76 (exp8 -> pila .)
    mayori          reduce using rule 76 (exp8 -> pila .)
    menor           reduce using rule 76 (exp8 -> pila .)
    menori          reduce using rule 76 (exp8 -> pila .)
    igual           reduce using rule 76 (exp8 -> pila .)
    diferente       reduce using rule 76 (exp8 -> pila .)
    band            reduce using rule 76 (exp8 -> pila .)
    and             reduce using rule 76 (exp8 -> pila .)
    bor             reduce using rule 76 (exp8 -> pila .)
    or              reduce using rule 76 (exp8 -> pila .)
    shiftizq        reduce using rule 76 (exp8 -> pila .)
    shiftder        reduce using rule 76 (exp8 -> pila .)
    bxor            reduce using rule 76 (exp8 -> pila .)
    t_xor           reduce using rule 76 (exp8 -> pila .)
    PTCOMA          reduce using rule 76 (exp8 -> pila .)
    par2            reduce using rule 76 (exp8 -> pila .)
    cor2            reduce using rule 76 (exp8 -> pila .)


state 64

    (67) exp8 -> string .

    por             reduce using rule 67 (exp8 -> string .)
    div             reduce using rule 67 (exp8 -> string .)
    mod             reduce using rule 67 (exp8 -> string .)
    mas             reduce using rule 67 (exp8 -> string .)
    res             reduce using rule 67 (exp8 -> string .)
    mayor           reduce using rule 67 (exp8 -> string .)
    mayori          reduce using rule 67 (exp8 -> string .)
    menor           reduce using rule 67 (exp8 -> string .)
    menori          reduce using rule 67 (exp8 -> string .)
    igual           reduce using rule 67 (exp8 -> string .)
    diferente       reduce using rule 67 (exp8 -> string .)
    band            reduce using rule 67 (exp8 -> string .)
    and             reduce using rule 67 (exp8 -> string .)
    bor             reduce using rule 67 (exp8 -> string .)
    or              reduce using rule 67 (exp8 -> string .)
    shiftizq        reduce using rule 67 (exp8 -> string .)
    shiftder        reduce using rule 67 (exp8 -> string .)
    bxor            reduce using rule 67 (exp8 -> string .)
    t_xor           reduce using rule 67 (exp8 -> string .)
    PTCOMA          reduce using rule 67 (exp8 -> string .)
    cor2            reduce using rule 67 (exp8 -> string .)
    par2            reduce using rule 67 (exp8 -> string .)


state 65

    (68) exp8 -> string2 .

    por             reduce using rule 68 (exp8 -> string2 .)
    div             reduce using rule 68 (exp8 -> string2 .)
    mod             reduce using rule 68 (exp8 -> string2 .)
    mas             reduce using rule 68 (exp8 -> string2 .)
    res             reduce using rule 68 (exp8 -> string2 .)
    mayor           reduce using rule 68 (exp8 -> string2 .)
    mayori          reduce using rule 68 (exp8 -> string2 .)
    menor           reduce using rule 68 (exp8 -> string2 .)
    menori          reduce using rule 68 (exp8 -> string2 .)
    igual           reduce using rule 68 (exp8 -> string2 .)
    diferente       reduce using rule 68 (exp8 -> string2 .)
    band            reduce using rule 68 (exp8 -> string2 .)
    and             reduce using rule 68 (exp8 -> string2 .)
    bor             reduce using rule 68 (exp8 -> string2 .)
    or              reduce using rule 68 (exp8 -> string2 .)
    shiftizq        reduce using rule 68 (exp8 -> string2 .)
    shiftder        reduce using rule 68 (exp8 -> string2 .)
    bxor            reduce using rule 68 (exp8 -> string2 .)
    t_xor           reduce using rule 68 (exp8 -> string2 .)
    PTCOMA          reduce using rule 68 (exp8 -> string2 .)
    cor2            reduce using rule 68 (exp8 -> string2 .)
    par2            reduce using rule 68 (exp8 -> string2 .)


state 66

    (69) exp8 -> entero .

    por             reduce using rule 69 (exp8 -> entero .)
    div             reduce using rule 69 (exp8 -> entero .)
    mod             reduce using rule 69 (exp8 -> entero .)
    mas             reduce using rule 69 (exp8 -> entero .)
    res             reduce using rule 69 (exp8 -> entero .)
    mayor           reduce using rule 69 (exp8 -> entero .)
    mayori          reduce using rule 69 (exp8 -> entero .)
    menor           reduce using rule 69 (exp8 -> entero .)
    menori          reduce using rule 69 (exp8 -> entero .)
    igual           reduce using rule 69 (exp8 -> entero .)
    diferente       reduce using rule 69 (exp8 -> entero .)
    band            reduce using rule 69 (exp8 -> entero .)
    and             reduce using rule 69 (exp8 -> entero .)
    bor             reduce using rule 69 (exp8 -> entero .)
    or              reduce using rule 69 (exp8 -> entero .)
    shiftizq        reduce using rule 69 (exp8 -> entero .)
    shiftder        reduce using rule 69 (exp8 -> entero .)
    bxor            reduce using rule 69 (exp8 -> entero .)
    t_xor           reduce using rule 69 (exp8 -> entero .)
    PTCOMA          reduce using rule 69 (exp8 -> entero .)
    cor2            reduce using rule 69 (exp8 -> entero .)
    par2            reduce using rule 69 (exp8 -> entero .)


state 67

    (70) exp8 -> decimal .

    por             reduce using rule 70 (exp8 -> decimal .)
    div             reduce using rule 70 (exp8 -> decimal .)
    mod             reduce using rule 70 (exp8 -> decimal .)
    mas             reduce using rule 70 (exp8 -> decimal .)
    res             reduce using rule 70 (exp8 -> decimal .)
    mayor           reduce using rule 70 (exp8 -> decimal .)
    mayori          reduce using rule 70 (exp8 -> decimal .)
    menor           reduce using rule 70 (exp8 -> decimal .)
    menori          reduce using rule 70 (exp8 -> decimal .)
    igual           reduce using rule 70 (exp8 -> decimal .)
    diferente       reduce using rule 70 (exp8 -> decimal .)
    band            reduce using rule 70 (exp8 -> decimal .)
    and             reduce using rule 70 (exp8 -> decimal .)
    bor             reduce using rule 70 (exp8 -> decimal .)
    or              reduce using rule 70 (exp8 -> decimal .)
    shiftizq        reduce using rule 70 (exp8 -> decimal .)
    shiftder        reduce using rule 70 (exp8 -> decimal .)
    bxor            reduce using rule 70 (exp8 -> decimal .)
    t_xor           reduce using rule 70 (exp8 -> decimal .)
    PTCOMA          reduce using rule 70 (exp8 -> decimal .)
    cor2            reduce using rule 70 (exp8 -> decimal .)
    par2            reduce using rule 70 (exp8 -> decimal .)


state 68

    (80) exp8 -> t_read . par1 par2

    par1            shift and go to state 113


state 69

    (81) exp8 -> t_array . par1 par2

    par1            shift and go to state 114


state 70

    (16) ASIGNACION_ARR -> asignado L_ACCESOS asigna . exp PTCOMA
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    asignado                       shift and go to state 41
    exp                            shift and go to state 115
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    exp8                           shift and go to state 57

state 71

    (62) L_ACCESOS -> L_ACCESOS acceso .

    asigna          reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    cor1            reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    por             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    div             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    mod             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    mas             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    res             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    mayor           reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    mayori          reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    menor           reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    menori          reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    igual           reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    diferente       reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    band            reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    and             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    bor             reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    or              reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    shiftizq        reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    shiftder        reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    bxor            reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    t_xor           reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    PTCOMA          reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    par2            reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)
    cor2            reduce using rule 62 (L_ACCESOS -> L_ACCESOS acceso .)


state 72

    (64) acceso -> cor1 exp8 . cor2

    cor2            shift and go to state 116


state 73

    (71) exp8 -> temporal .

    cor2            reduce using rule 71 (exp8 -> temporal .)


state 74

    (72) exp8 -> puntero .

    cor2            reduce using rule 72 (exp8 -> puntero .)


state 75

    (73) exp8 -> direccion .

    cor2            reduce using rule 73 (exp8 -> direccion .)


state 76

    (74) exp8 -> parametro .

    cor2            reduce using rule 74 (exp8 -> parametro .)


state 77

    (75) exp8 -> devfunc .

    cor2            reduce using rule 75 (exp8 -> devfunc .)


state 78

    (76) exp8 -> pila .

    cor2            reduce using rule 76 (exp8 -> pila .)


state 79

    (18) GOTO -> t_goto iden PTCOMA .

    t_goto          reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    t_unset         reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    t_print         reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    error           reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    t_exit          reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    t_if            reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    temporal        reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    puntero         reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    direccion       reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    parametro       reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    devfunc         reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    pila            reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    iden            reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)
    $end            reduce using rule 18 (GOTO -> t_goto iden PTCOMA .)


state 80

    (17) UNSET -> t_unset par1 asignado . par2 PTCOMA

    par2            shift and go to state 117


state 81

    (19) PRINT -> t_print par1 exp . par2 PTCOMA
    (20) PRINT -> t_print par1 exp . par2 error

    par2            shift and go to state 118


state 82

    (21) PRINT -> error par1 exp . par2 error

    par2            shift and go to state 119


state 83

    (5) IF -> t_if par1 exp . par2 GOTO

    par2            shift and go to state 120


state 84

    (61) exp11 -> asignado L_ACCESOS .
    (62) L_ACCESOS -> L_ACCESOS . acceso
    (64) acceso -> . cor1 exp8 cor2

    por             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    div             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    mod             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    mas             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    res             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    mayor           reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    mayori          reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    menor           reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    menori          reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    igual           reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    diferente       reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    band            reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    and             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    bor             reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    or              reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    shiftizq        reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    shiftder        reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    bxor            reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    t_xor           reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    PTCOMA          reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    par2            reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    cor2            reduce using rule 61 (exp11 -> asignado L_ACCESOS .)
    cor1            shift and go to state 34

    acceso                         shift and go to state 71

state 85

    (22) asignacion -> asignado asigna exp PTCOMA .

    t_goto          reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    t_unset         reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    t_print         reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    error           reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    t_exit          reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    t_if            reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    temporal        reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    puntero         reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    direccion       reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    parametro       reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    devfunc         reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    pila            reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    iden            reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)
    $end            reduce using rule 22 (asignacion -> asignado asigna exp PTCOMA .)


state 86

    (23) as_puntero -> asignado asigna depuntero asignado . PTCOMA

    PTCOMA          shift and go to state 121


state 87

    (31) exp -> exp1 bxor . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp1                           shift and go to state 122
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 88

    (32) exp -> exp1 t_xor . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp1                           shift and go to state 123
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 89

    (34) exp1 -> exp2 bor . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp2                           shift and go to state 124
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 90

    (35) exp1 -> exp2 or . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp2                           shift and go to state 125
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 91

    (36) exp1 -> exp2 shiftizq . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp2                           shift and go to state 126
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 92

    (37) exp1 -> exp2 shiftder . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp2                           shift and go to state 127
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 93

    (39) exp2 -> exp3 band . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp3                           shift and go to state 128
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 94

    (40) exp2 -> exp3 and . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp3                           shift and go to state 129
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 95

    (42) exp3 -> exp4 igual . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp4                           shift and go to state 130
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 96

    (43) exp3 -> exp4 diferente . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp4                           shift and go to state 131
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 97

    (45) exp4 -> exp5 mayor . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp5                           shift and go to state 132
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 98

    (46) exp4 -> exp5 mayori . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp5                           shift and go to state 133
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 99

    (47) exp4 -> exp5 menor . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp5                           shift and go to state 134
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 100

    (48) exp4 -> exp5 menori . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp5                           shift and go to state 135
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 101

    (50) exp5 -> exp6 mas . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp6                           shift and go to state 136
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 102

    (51) exp5 -> exp6 res . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp6                           shift and go to state 137
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 103

    (58) exp7 -> res exp11 .

    por             reduce using rule 58 (exp7 -> res exp11 .)
    div             reduce using rule 58 (exp7 -> res exp11 .)
    mod             reduce using rule 58 (exp7 -> res exp11 .)
    mas             reduce using rule 58 (exp7 -> res exp11 .)
    res             reduce using rule 58 (exp7 -> res exp11 .)
    mayor           reduce using rule 58 (exp7 -> res exp11 .)
    mayori          reduce using rule 58 (exp7 -> res exp11 .)
    menor           reduce using rule 58 (exp7 -> res exp11 .)
    menori          reduce using rule 58 (exp7 -> res exp11 .)
    igual           reduce using rule 58 (exp7 -> res exp11 .)
    diferente       reduce using rule 58 (exp7 -> res exp11 .)
    band            reduce using rule 58 (exp7 -> res exp11 .)
    and             reduce using rule 58 (exp7 -> res exp11 .)
    bor             reduce using rule 58 (exp7 -> res exp11 .)
    or              reduce using rule 58 (exp7 -> res exp11 .)
    shiftizq        reduce using rule 58 (exp7 -> res exp11 .)
    shiftder        reduce using rule 58 (exp7 -> res exp11 .)
    bxor            reduce using rule 58 (exp7 -> res exp11 .)
    t_xor           reduce using rule 58 (exp7 -> res exp11 .)
    PTCOMA          reduce using rule 58 (exp7 -> res exp11 .)
    par2            reduce using rule 58 (exp7 -> res exp11 .)
    cor2            reduce using rule 58 (exp7 -> res exp11 .)


state 104

    (53) exp6 -> exp7 por . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp7                           shift and go to state 138
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 105

    (54) exp6 -> exp7 div . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp7                           shift and go to state 139
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 106

    (55) exp6 -> exp7 mod . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp7                           shift and go to state 140
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 107

    (56) exp6 -> t_abs par1 . exp7 par2
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp7                           shift and go to state 141
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 108

    (77) exp8 -> par1 t_int . par2 exp

    par2            shift and go to state 142


state 109

    (78) exp8 -> par1 t_float . par2 exp

    par2            shift and go to state 143


state 110

    (79) exp8 -> par1 t_char . par2 exp

    par2            shift and go to state 144


state 111

    (59) exp7 -> not exp11 .

    por             reduce using rule 59 (exp7 -> not exp11 .)
    div             reduce using rule 59 (exp7 -> not exp11 .)
    mod             reduce using rule 59 (exp7 -> not exp11 .)
    mas             reduce using rule 59 (exp7 -> not exp11 .)
    res             reduce using rule 59 (exp7 -> not exp11 .)
    mayor           reduce using rule 59 (exp7 -> not exp11 .)
    mayori          reduce using rule 59 (exp7 -> not exp11 .)
    menor           reduce using rule 59 (exp7 -> not exp11 .)
    menori          reduce using rule 59 (exp7 -> not exp11 .)
    igual           reduce using rule 59 (exp7 -> not exp11 .)
    diferente       reduce using rule 59 (exp7 -> not exp11 .)
    band            reduce using rule 59 (exp7 -> not exp11 .)
    and             reduce using rule 59 (exp7 -> not exp11 .)
    bor             reduce using rule 59 (exp7 -> not exp11 .)
    or              reduce using rule 59 (exp7 -> not exp11 .)
    shiftizq        reduce using rule 59 (exp7 -> not exp11 .)
    shiftder        reduce using rule 59 (exp7 -> not exp11 .)
    bxor            reduce using rule 59 (exp7 -> not exp11 .)
    t_xor           reduce using rule 59 (exp7 -> not exp11 .)
    PTCOMA          reduce using rule 59 (exp7 -> not exp11 .)
    par2            reduce using rule 59 (exp7 -> not exp11 .)
    cor2            reduce using rule 59 (exp7 -> not exp11 .)


state 112

    (60) exp7 -> bnot exp11 .

    por             reduce using rule 60 (exp7 -> bnot exp11 .)
    div             reduce using rule 60 (exp7 -> bnot exp11 .)
    mod             reduce using rule 60 (exp7 -> bnot exp11 .)
    mas             reduce using rule 60 (exp7 -> bnot exp11 .)
    res             reduce using rule 60 (exp7 -> bnot exp11 .)
    mayor           reduce using rule 60 (exp7 -> bnot exp11 .)
    mayori          reduce using rule 60 (exp7 -> bnot exp11 .)
    menor           reduce using rule 60 (exp7 -> bnot exp11 .)
    menori          reduce using rule 60 (exp7 -> bnot exp11 .)
    igual           reduce using rule 60 (exp7 -> bnot exp11 .)
    diferente       reduce using rule 60 (exp7 -> bnot exp11 .)
    band            reduce using rule 60 (exp7 -> bnot exp11 .)
    and             reduce using rule 60 (exp7 -> bnot exp11 .)
    bor             reduce using rule 60 (exp7 -> bnot exp11 .)
    or              reduce using rule 60 (exp7 -> bnot exp11 .)
    shiftizq        reduce using rule 60 (exp7 -> bnot exp11 .)
    shiftder        reduce using rule 60 (exp7 -> bnot exp11 .)
    bxor            reduce using rule 60 (exp7 -> bnot exp11 .)
    t_xor           reduce using rule 60 (exp7 -> bnot exp11 .)
    PTCOMA          reduce using rule 60 (exp7 -> bnot exp11 .)
    par2            reduce using rule 60 (exp7 -> bnot exp11 .)
    cor2            reduce using rule 60 (exp7 -> bnot exp11 .)


state 113

    (80) exp8 -> t_read par1 . par2

    par2            shift and go to state 145


state 114

    (81) exp8 -> t_array par1 . par2

    par2            shift and go to state 146


state 115

    (16) ASIGNACION_ARR -> asignado L_ACCESOS asigna exp . PTCOMA

    PTCOMA          shift and go to state 147


state 116

    (64) acceso -> cor1 exp8 cor2 .

    asigna          reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    cor1            reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    por             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    div             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    mod             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    mas             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    res             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    mayor           reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    mayori          reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    menor           reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    menori          reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    igual           reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    diferente       reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    band            reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    and             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    bor             reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    or              reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    shiftizq        reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    shiftder        reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    bxor            reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    t_xor           reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    PTCOMA          reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    par2            reduce using rule 64 (acceso -> cor1 exp8 cor2 .)
    cor2            reduce using rule 64 (acceso -> cor1 exp8 cor2 .)


state 117

    (17) UNSET -> t_unset par1 asignado par2 . PTCOMA

    PTCOMA          shift and go to state 148


state 118

    (19) PRINT -> t_print par1 exp par2 . PTCOMA
    (20) PRINT -> t_print par1 exp par2 . error

    PTCOMA          shift and go to state 149
    error           shift and go to state 150


state 119

    (21) PRINT -> error par1 exp par2 . error

    error           shift and go to state 151


state 120

    (5) IF -> t_if par1 exp par2 . GOTO
    (18) GOTO -> . t_goto iden PTCOMA

    t_goto          shift and go to state 18

    GOTO                           shift and go to state 152

state 121

    (23) as_puntero -> asignado asigna depuntero asignado PTCOMA .

    t_goto          reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_unset         reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_print         reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    error           reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_exit          reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_if            reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    temporal        reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    puntero         reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    direccion       reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    parametro       reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    devfunc         reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    pila            reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    iden            reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    $end            reduce using rule 23 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)


state 122

    (31) exp -> exp1 bxor exp1 .

    PTCOMA          reduce using rule 31 (exp -> exp1 bxor exp1 .)
    par2            reduce using rule 31 (exp -> exp1 bxor exp1 .)
    por             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    div             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    mod             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    mas             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    res             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    mayor           reduce using rule 31 (exp -> exp1 bxor exp1 .)
    mayori          reduce using rule 31 (exp -> exp1 bxor exp1 .)
    menor           reduce using rule 31 (exp -> exp1 bxor exp1 .)
    menori          reduce using rule 31 (exp -> exp1 bxor exp1 .)
    igual           reduce using rule 31 (exp -> exp1 bxor exp1 .)
    diferente       reduce using rule 31 (exp -> exp1 bxor exp1 .)
    band            reduce using rule 31 (exp -> exp1 bxor exp1 .)
    and             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    bor             reduce using rule 31 (exp -> exp1 bxor exp1 .)
    or              reduce using rule 31 (exp -> exp1 bxor exp1 .)
    shiftizq        reduce using rule 31 (exp -> exp1 bxor exp1 .)
    shiftder        reduce using rule 31 (exp -> exp1 bxor exp1 .)
    bxor            reduce using rule 31 (exp -> exp1 bxor exp1 .)
    t_xor           reduce using rule 31 (exp -> exp1 bxor exp1 .)
    cor2            reduce using rule 31 (exp -> exp1 bxor exp1 .)


state 123

    (32) exp -> exp1 t_xor exp1 .

    PTCOMA          reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    par2            reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    por             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    div             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    mod             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    mas             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    res             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    mayor           reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    mayori          reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    menor           reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    menori          reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    igual           reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    diferente       reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    band            reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    and             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    bor             reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    or              reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    shiftizq        reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    shiftder        reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    bxor            reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    t_xor           reduce using rule 32 (exp -> exp1 t_xor exp1 .)
    cor2            reduce using rule 32 (exp -> exp1 t_xor exp1 .)


state 124

    (34) exp1 -> exp2 bor exp2 .

    bxor            reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    t_xor           reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    PTCOMA          reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    par2            reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    por             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    div             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    mod             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    mas             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    res             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    mayor           reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    mayori          reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    menor           reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    menori          reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    igual           reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    diferente       reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    band            reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    and             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    bor             reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    or              reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    shiftizq        reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    shiftder        reduce using rule 34 (exp1 -> exp2 bor exp2 .)
    cor2            reduce using rule 34 (exp1 -> exp2 bor exp2 .)


state 125

    (35) exp1 -> exp2 or exp2 .

    bxor            reduce using rule 35 (exp1 -> exp2 or exp2 .)
    t_xor           reduce using rule 35 (exp1 -> exp2 or exp2 .)
    PTCOMA          reduce using rule 35 (exp1 -> exp2 or exp2 .)
    par2            reduce using rule 35 (exp1 -> exp2 or exp2 .)
    por             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    div             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    mod             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    mas             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    res             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    mayor           reduce using rule 35 (exp1 -> exp2 or exp2 .)
    mayori          reduce using rule 35 (exp1 -> exp2 or exp2 .)
    menor           reduce using rule 35 (exp1 -> exp2 or exp2 .)
    menori          reduce using rule 35 (exp1 -> exp2 or exp2 .)
    igual           reduce using rule 35 (exp1 -> exp2 or exp2 .)
    diferente       reduce using rule 35 (exp1 -> exp2 or exp2 .)
    band            reduce using rule 35 (exp1 -> exp2 or exp2 .)
    and             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    bor             reduce using rule 35 (exp1 -> exp2 or exp2 .)
    or              reduce using rule 35 (exp1 -> exp2 or exp2 .)
    shiftizq        reduce using rule 35 (exp1 -> exp2 or exp2 .)
    shiftder        reduce using rule 35 (exp1 -> exp2 or exp2 .)
    cor2            reduce using rule 35 (exp1 -> exp2 or exp2 .)


state 126

    (36) exp1 -> exp2 shiftizq exp2 .

    bxor            reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    t_xor           reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    PTCOMA          reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    par2            reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    por             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    div             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    mod             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    mas             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    res             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    mayor           reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    mayori          reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    menor           reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    menori          reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    igual           reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    diferente       reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    band            reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    and             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    bor             reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    or              reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    shiftizq        reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    shiftder        reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)
    cor2            reduce using rule 36 (exp1 -> exp2 shiftizq exp2 .)


state 127

    (37) exp1 -> exp2 shiftder exp2 .

    bxor            reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    t_xor           reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    PTCOMA          reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    par2            reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    por             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    div             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    mod             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    mas             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    res             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    mayor           reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    mayori          reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    menor           reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    menori          reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    igual           reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    diferente       reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    band            reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    and             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    bor             reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    or              reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    shiftizq        reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    shiftder        reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)
    cor2            reduce using rule 37 (exp1 -> exp2 shiftder exp2 .)


state 128

    (39) exp2 -> exp3 band exp3 .

    bor             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    or              reduce using rule 39 (exp2 -> exp3 band exp3 .)
    shiftizq        reduce using rule 39 (exp2 -> exp3 band exp3 .)
    shiftder        reduce using rule 39 (exp2 -> exp3 band exp3 .)
    bxor            reduce using rule 39 (exp2 -> exp3 band exp3 .)
    t_xor           reduce using rule 39 (exp2 -> exp3 band exp3 .)
    PTCOMA          reduce using rule 39 (exp2 -> exp3 band exp3 .)
    par2            reduce using rule 39 (exp2 -> exp3 band exp3 .)
    por             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    div             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    mod             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    mas             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    res             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    mayor           reduce using rule 39 (exp2 -> exp3 band exp3 .)
    mayori          reduce using rule 39 (exp2 -> exp3 band exp3 .)
    menor           reduce using rule 39 (exp2 -> exp3 band exp3 .)
    menori          reduce using rule 39 (exp2 -> exp3 band exp3 .)
    igual           reduce using rule 39 (exp2 -> exp3 band exp3 .)
    diferente       reduce using rule 39 (exp2 -> exp3 band exp3 .)
    band            reduce using rule 39 (exp2 -> exp3 band exp3 .)
    and             reduce using rule 39 (exp2 -> exp3 band exp3 .)
    cor2            reduce using rule 39 (exp2 -> exp3 band exp3 .)


state 129

    (40) exp2 -> exp3 and exp3 .

    bor             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    or              reduce using rule 40 (exp2 -> exp3 and exp3 .)
    shiftizq        reduce using rule 40 (exp2 -> exp3 and exp3 .)
    shiftder        reduce using rule 40 (exp2 -> exp3 and exp3 .)
    bxor            reduce using rule 40 (exp2 -> exp3 and exp3 .)
    t_xor           reduce using rule 40 (exp2 -> exp3 and exp3 .)
    PTCOMA          reduce using rule 40 (exp2 -> exp3 and exp3 .)
    par2            reduce using rule 40 (exp2 -> exp3 and exp3 .)
    por             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    div             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    mod             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    mas             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    res             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    mayor           reduce using rule 40 (exp2 -> exp3 and exp3 .)
    mayori          reduce using rule 40 (exp2 -> exp3 and exp3 .)
    menor           reduce using rule 40 (exp2 -> exp3 and exp3 .)
    menori          reduce using rule 40 (exp2 -> exp3 and exp3 .)
    igual           reduce using rule 40 (exp2 -> exp3 and exp3 .)
    diferente       reduce using rule 40 (exp2 -> exp3 and exp3 .)
    band            reduce using rule 40 (exp2 -> exp3 and exp3 .)
    and             reduce using rule 40 (exp2 -> exp3 and exp3 .)
    cor2            reduce using rule 40 (exp2 -> exp3 and exp3 .)


state 130

    (42) exp3 -> exp4 igual exp4 .

    band            reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    and             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    bor             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    or              reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    shiftizq        reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    shiftder        reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    bxor            reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    t_xor           reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    PTCOMA          reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    par2            reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    por             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    div             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    mod             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    mas             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    res             reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    mayor           reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    mayori          reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    menor           reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    menori          reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    igual           reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    diferente       reduce using rule 42 (exp3 -> exp4 igual exp4 .)
    cor2            reduce using rule 42 (exp3 -> exp4 igual exp4 .)


state 131

    (43) exp3 -> exp4 diferente exp4 .

    band            reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    and             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    bor             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    or              reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    shiftizq        reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    shiftder        reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    bxor            reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    t_xor           reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    PTCOMA          reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    par2            reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    por             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    div             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    mod             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    mas             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    res             reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    mayor           reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    mayori          reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    menor           reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    menori          reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    igual           reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    diferente       reduce using rule 43 (exp3 -> exp4 diferente exp4 .)
    cor2            reduce using rule 43 (exp3 -> exp4 diferente exp4 .)


state 132

    (45) exp4 -> exp5 mayor exp5 .

    igual           reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    diferente       reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    band            reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    and             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    bor             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    or              reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    shiftizq        reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    shiftder        reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    bxor            reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    t_xor           reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    PTCOMA          reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    par2            reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    por             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    div             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    mod             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    mas             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    res             reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    mayor           reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    mayori          reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    menor           reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    menori          reduce using rule 45 (exp4 -> exp5 mayor exp5 .)
    cor2            reduce using rule 45 (exp4 -> exp5 mayor exp5 .)


state 133

    (46) exp4 -> exp5 mayori exp5 .

    igual           reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    diferente       reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    band            reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    and             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    bor             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    or              reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    shiftizq        reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    shiftder        reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    bxor            reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    t_xor           reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    PTCOMA          reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    par2            reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    por             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    div             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    mod             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    mas             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    res             reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    mayor           reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    mayori          reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    menor           reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    menori          reduce using rule 46 (exp4 -> exp5 mayori exp5 .)
    cor2            reduce using rule 46 (exp4 -> exp5 mayori exp5 .)


state 134

    (47) exp4 -> exp5 menor exp5 .

    igual           reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    diferente       reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    band            reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    and             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    bor             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    or              reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    shiftizq        reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    shiftder        reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    bxor            reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    t_xor           reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    PTCOMA          reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    par2            reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    por             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    div             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    mod             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    mas             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    res             reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    mayor           reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    mayori          reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    menor           reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    menori          reduce using rule 47 (exp4 -> exp5 menor exp5 .)
    cor2            reduce using rule 47 (exp4 -> exp5 menor exp5 .)


state 135

    (48) exp4 -> exp5 menori exp5 .

    igual           reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    diferente       reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    band            reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    and             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    bor             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    or              reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    shiftizq        reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    shiftder        reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    bxor            reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    t_xor           reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    PTCOMA          reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    par2            reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    por             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    div             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    mod             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    mas             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    res             reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    mayor           reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    mayori          reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    menor           reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    menori          reduce using rule 48 (exp4 -> exp5 menori exp5 .)
    cor2            reduce using rule 48 (exp4 -> exp5 menori exp5 .)


state 136

    (50) exp5 -> exp6 mas exp6 .

    mayor           reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    mayori          reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    menor           reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    menori          reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    igual           reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    diferente       reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    band            reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    and             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    bor             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    or              reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    shiftizq        reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    shiftder        reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    bxor            reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    t_xor           reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    PTCOMA          reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    par2            reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    por             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    div             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    mod             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    mas             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    res             reduce using rule 50 (exp5 -> exp6 mas exp6 .)
    cor2            reduce using rule 50 (exp5 -> exp6 mas exp6 .)


state 137

    (51) exp5 -> exp6 res exp6 .

    mayor           reduce using rule 51 (exp5 -> exp6 res exp6 .)
    mayori          reduce using rule 51 (exp5 -> exp6 res exp6 .)
    menor           reduce using rule 51 (exp5 -> exp6 res exp6 .)
    menori          reduce using rule 51 (exp5 -> exp6 res exp6 .)
    igual           reduce using rule 51 (exp5 -> exp6 res exp6 .)
    diferente       reduce using rule 51 (exp5 -> exp6 res exp6 .)
    band            reduce using rule 51 (exp5 -> exp6 res exp6 .)
    and             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    bor             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    or              reduce using rule 51 (exp5 -> exp6 res exp6 .)
    shiftizq        reduce using rule 51 (exp5 -> exp6 res exp6 .)
    shiftder        reduce using rule 51 (exp5 -> exp6 res exp6 .)
    bxor            reduce using rule 51 (exp5 -> exp6 res exp6 .)
    t_xor           reduce using rule 51 (exp5 -> exp6 res exp6 .)
    PTCOMA          reduce using rule 51 (exp5 -> exp6 res exp6 .)
    par2            reduce using rule 51 (exp5 -> exp6 res exp6 .)
    por             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    div             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    mod             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    mas             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    res             reduce using rule 51 (exp5 -> exp6 res exp6 .)
    cor2            reduce using rule 51 (exp5 -> exp6 res exp6 .)


state 138

    (53) exp6 -> exp7 por exp7 .

    mas             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    res             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    mayor           reduce using rule 53 (exp6 -> exp7 por exp7 .)
    mayori          reduce using rule 53 (exp6 -> exp7 por exp7 .)
    menor           reduce using rule 53 (exp6 -> exp7 por exp7 .)
    menori          reduce using rule 53 (exp6 -> exp7 por exp7 .)
    igual           reduce using rule 53 (exp6 -> exp7 por exp7 .)
    diferente       reduce using rule 53 (exp6 -> exp7 por exp7 .)
    band            reduce using rule 53 (exp6 -> exp7 por exp7 .)
    and             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    bor             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    or              reduce using rule 53 (exp6 -> exp7 por exp7 .)
    shiftizq        reduce using rule 53 (exp6 -> exp7 por exp7 .)
    shiftder        reduce using rule 53 (exp6 -> exp7 por exp7 .)
    bxor            reduce using rule 53 (exp6 -> exp7 por exp7 .)
    t_xor           reduce using rule 53 (exp6 -> exp7 por exp7 .)
    PTCOMA          reduce using rule 53 (exp6 -> exp7 por exp7 .)
    par2            reduce using rule 53 (exp6 -> exp7 por exp7 .)
    por             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    div             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    mod             reduce using rule 53 (exp6 -> exp7 por exp7 .)
    cor2            reduce using rule 53 (exp6 -> exp7 por exp7 .)


state 139

    (54) exp6 -> exp7 div exp7 .

    mas             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    res             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    mayor           reduce using rule 54 (exp6 -> exp7 div exp7 .)
    mayori          reduce using rule 54 (exp6 -> exp7 div exp7 .)
    menor           reduce using rule 54 (exp6 -> exp7 div exp7 .)
    menori          reduce using rule 54 (exp6 -> exp7 div exp7 .)
    igual           reduce using rule 54 (exp6 -> exp7 div exp7 .)
    diferente       reduce using rule 54 (exp6 -> exp7 div exp7 .)
    band            reduce using rule 54 (exp6 -> exp7 div exp7 .)
    and             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    bor             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    or              reduce using rule 54 (exp6 -> exp7 div exp7 .)
    shiftizq        reduce using rule 54 (exp6 -> exp7 div exp7 .)
    shiftder        reduce using rule 54 (exp6 -> exp7 div exp7 .)
    bxor            reduce using rule 54 (exp6 -> exp7 div exp7 .)
    t_xor           reduce using rule 54 (exp6 -> exp7 div exp7 .)
    PTCOMA          reduce using rule 54 (exp6 -> exp7 div exp7 .)
    par2            reduce using rule 54 (exp6 -> exp7 div exp7 .)
    por             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    div             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    mod             reduce using rule 54 (exp6 -> exp7 div exp7 .)
    cor2            reduce using rule 54 (exp6 -> exp7 div exp7 .)


state 140

    (55) exp6 -> exp7 mod exp7 .

    mas             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    res             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    mayor           reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    mayori          reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    menor           reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    menori          reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    igual           reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    diferente       reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    band            reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    and             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    bor             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    or              reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    shiftizq        reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    shiftder        reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    bxor            reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    t_xor           reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    PTCOMA          reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    par2            reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    por             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    div             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    mod             reduce using rule 55 (exp6 -> exp7 mod exp7 .)
    cor2            reduce using rule 55 (exp6 -> exp7 mod exp7 .)


state 141

    (56) exp6 -> t_abs par1 exp7 . par2

    par2            shift and go to state 153


state 142

    (77) exp8 -> par1 t_int par2 . exp
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 154
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 143

    (78) exp8 -> par1 t_float par2 . exp
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 155
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 144

    (79) exp8 -> par1 t_char par2 . exp
    (31) exp -> . exp1 bxor exp1
    (32) exp -> . exp1 t_xor exp1
    (33) exp -> . exp1
    (34) exp1 -> . exp2 bor exp2
    (35) exp1 -> . exp2 or exp2
    (36) exp1 -> . exp2 shiftizq exp2
    (37) exp1 -> . exp2 shiftder exp2
    (38) exp1 -> . exp2
    (39) exp2 -> . exp3 band exp3
    (40) exp2 -> . exp3 and exp3
    (41) exp2 -> . exp3
    (42) exp3 -> . exp4 igual exp4
    (43) exp3 -> . exp4 diferente exp4
    (44) exp3 -> . exp4
    (45) exp4 -> . exp5 mayor exp5
    (46) exp4 -> . exp5 mayori exp5
    (47) exp4 -> . exp5 menor exp5
    (48) exp4 -> . exp5 menori exp5
    (49) exp4 -> . exp5
    (50) exp5 -> . exp6 mas exp6
    (51) exp5 -> . exp6 res exp6
    (52) exp5 -> . exp6
    (53) exp6 -> . exp7 por exp7
    (54) exp6 -> . exp7 div exp7
    (55) exp6 -> . exp7 mod exp7
    (56) exp6 -> . t_abs par1 exp7 par2
    (57) exp6 -> . exp7
    (58) exp7 -> . res exp11
    (59) exp7 -> . not exp11
    (60) exp7 -> . bnot exp11
    (66) exp7 -> . exp11
    (61) exp11 -> . asignado L_ACCESOS
    (65) exp11 -> . exp8
    (25) asignado -> . temporal
    (26) asignado -> . puntero
    (27) asignado -> . direccion
    (28) asignado -> . parametro
    (29) asignado -> . devfunc
    (30) asignado -> . pila
    (67) exp8 -> . string
    (68) exp8 -> . string2
    (69) exp8 -> . entero
    (70) exp8 -> . decimal
    (71) exp8 -> . temporal
    (72) exp8 -> . puntero
    (73) exp8 -> . direccion
    (74) exp8 -> . parametro
    (75) exp8 -> . devfunc
    (76) exp8 -> . pila
    (77) exp8 -> . par1 t_int par2 exp
    (78) exp8 -> . par1 t_float par2 exp
    (79) exp8 -> . par1 t_char par2 exp
    (80) exp8 -> . t_read par1 par2
    (81) exp8 -> . t_array par1 par2

    t_abs           shift and go to state 52
    res             shift and go to state 50
    not             shift and go to state 55
    bnot            shift and go to state 56
    temporal        shift and go to state 58
    puntero         shift and go to state 59
    direccion       shift and go to state 60
    parametro       shift and go to state 61
    devfunc         shift and go to state 62
    pila            shift and go to state 63
    string          shift and go to state 64
    string2         shift and go to state 65
    entero          shift and go to state 66
    decimal         shift and go to state 67
    par1            shift and go to state 53
    t_read          shift and go to state 68
    t_array         shift and go to state 69

    exp                            shift and go to state 156
    exp1                           shift and go to state 44
    exp2                           shift and go to state 45
    exp3                           shift and go to state 46
    exp4                           shift and go to state 47
    exp5                           shift and go to state 48
    exp6                           shift and go to state 49
    exp7                           shift and go to state 51
    exp11                          shift and go to state 54
    asignado                       shift and go to state 41
    exp8                           shift and go to state 57

state 145

    (80) exp8 -> t_read par1 par2 .

    por             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    div             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    mod             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    mas             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    res             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    mayor           reduce using rule 80 (exp8 -> t_read par1 par2 .)
    mayori          reduce using rule 80 (exp8 -> t_read par1 par2 .)
    menor           reduce using rule 80 (exp8 -> t_read par1 par2 .)
    menori          reduce using rule 80 (exp8 -> t_read par1 par2 .)
    igual           reduce using rule 80 (exp8 -> t_read par1 par2 .)
    diferente       reduce using rule 80 (exp8 -> t_read par1 par2 .)
    band            reduce using rule 80 (exp8 -> t_read par1 par2 .)
    and             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    bor             reduce using rule 80 (exp8 -> t_read par1 par2 .)
    or              reduce using rule 80 (exp8 -> t_read par1 par2 .)
    shiftizq        reduce using rule 80 (exp8 -> t_read par1 par2 .)
    shiftder        reduce using rule 80 (exp8 -> t_read par1 par2 .)
    bxor            reduce using rule 80 (exp8 -> t_read par1 par2 .)
    t_xor           reduce using rule 80 (exp8 -> t_read par1 par2 .)
    PTCOMA          reduce using rule 80 (exp8 -> t_read par1 par2 .)
    cor2            reduce using rule 80 (exp8 -> t_read par1 par2 .)
    par2            reduce using rule 80 (exp8 -> t_read par1 par2 .)


state 146

    (81) exp8 -> t_array par1 par2 .

    por             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    div             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    mod             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    mas             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    res             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    mayor           reduce using rule 81 (exp8 -> t_array par1 par2 .)
    mayori          reduce using rule 81 (exp8 -> t_array par1 par2 .)
    menor           reduce using rule 81 (exp8 -> t_array par1 par2 .)
    menori          reduce using rule 81 (exp8 -> t_array par1 par2 .)
    igual           reduce using rule 81 (exp8 -> t_array par1 par2 .)
    diferente       reduce using rule 81 (exp8 -> t_array par1 par2 .)
    band            reduce using rule 81 (exp8 -> t_array par1 par2 .)
    and             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    bor             reduce using rule 81 (exp8 -> t_array par1 par2 .)
    or              reduce using rule 81 (exp8 -> t_array par1 par2 .)
    shiftizq        reduce using rule 81 (exp8 -> t_array par1 par2 .)
    shiftder        reduce using rule 81 (exp8 -> t_array par1 par2 .)
    bxor            reduce using rule 81 (exp8 -> t_array par1 par2 .)
    t_xor           reduce using rule 81 (exp8 -> t_array par1 par2 .)
    PTCOMA          reduce using rule 81 (exp8 -> t_array par1 par2 .)
    cor2            reduce using rule 81 (exp8 -> t_array par1 par2 .)
    par2            reduce using rule 81 (exp8 -> t_array par1 par2 .)


state 147

    (16) ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .

    t_goto          reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    t_unset         reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    t_print         reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    error           reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    t_exit          reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    t_if            reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    temporal        reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    puntero         reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    direccion       reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    parametro       reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    devfunc         reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    pila            reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    iden            reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)
    $end            reduce using rule 16 (ASIGNACION_ARR -> asignado L_ACCESOS asigna exp PTCOMA .)


state 148

    (17) UNSET -> t_unset par1 asignado par2 PTCOMA .

    t_goto          reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_unset         reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_print         reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    error           reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_exit          reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_if            reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    temporal        reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    puntero         reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    direccion       reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    parametro       reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    devfunc         reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    pila            reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    iden            reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    $end            reduce using rule 17 (UNSET -> t_unset par1 asignado par2 PTCOMA .)


state 149

    (19) PRINT -> t_print par1 exp par2 PTCOMA .

    t_goto          reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_unset         reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_print         reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    error           reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_exit          reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_if            reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    temporal        reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    puntero         reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    direccion       reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    parametro       reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    devfunc         reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    pila            reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    iden            reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)
    $end            reduce using rule 19 (PRINT -> t_print par1 exp par2 PTCOMA .)


state 150

    (20) PRINT -> t_print par1 exp par2 error .

    t_goto          reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    t_unset         reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    t_print         reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    error           reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    t_exit          reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    t_if            reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    temporal        reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    puntero         reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    direccion       reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    parametro       reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    devfunc         reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    pila            reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    iden            reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)
    $end            reduce using rule 20 (PRINT -> t_print par1 exp par2 error .)


state 151

    (21) PRINT -> error par1 exp par2 error .

    t_goto          reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    t_unset         reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    t_print         reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    error           reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    t_exit          reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    t_if            reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    temporal        reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    puntero         reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    direccion       reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    parametro       reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    devfunc         reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    pila            reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    iden            reduce using rule 21 (PRINT -> error par1 exp par2 error .)
    $end            reduce using rule 21 (PRINT -> error par1 exp par2 error .)


state 152

    (5) IF -> t_if par1 exp par2 GOTO .

    t_goto          reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    t_unset         reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    t_print         reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    error           reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    t_exit          reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    t_if            reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    temporal        reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    puntero         reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    direccion       reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    parametro       reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    devfunc         reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    pila            reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    iden            reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)
    $end            reduce using rule 5 (IF -> t_if par1 exp par2 GOTO .)


state 153

    (56) exp6 -> t_abs par1 exp7 par2 .

    mas             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    res             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    mayor           reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    mayori          reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    menor           reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    menori          reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    igual           reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    diferente       reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    band            reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    and             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    bor             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    or              reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    shiftizq        reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    shiftder        reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    bxor            reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    t_xor           reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    PTCOMA          reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    par2            reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    por             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    div             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    mod             reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)
    cor2            reduce using rule 56 (exp6 -> t_abs par1 exp7 par2 .)


state 154

    (77) exp8 -> par1 t_int par2 exp .

    por             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    div             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    mod             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    mas             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    res             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    mayor           reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    mayori          reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    menor           reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    menori          reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    igual           reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    diferente       reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    band            reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    and             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    bor             reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    or              reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    shiftizq        reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    shiftder        reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    bxor            reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    t_xor           reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    PTCOMA          reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    cor2            reduce using rule 77 (exp8 -> par1 t_int par2 exp .)
    par2            reduce using rule 77 (exp8 -> par1 t_int par2 exp .)


state 155

    (78) exp8 -> par1 t_float par2 exp .

    por             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    div             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    mod             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    mas             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    res             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    mayor           reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    mayori          reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    menor           reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    menori          reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    igual           reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    diferente       reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    band            reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    and             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    bor             reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    or              reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    shiftizq        reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    shiftder        reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    bxor            reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    t_xor           reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    PTCOMA          reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    cor2            reduce using rule 78 (exp8 -> par1 t_float par2 exp .)
    par2            reduce using rule 78 (exp8 -> par1 t_float par2 exp .)


state 156

    (79) exp8 -> par1 t_char par2 exp .

    por             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    div             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    mod             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    mas             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    res             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    mayor           reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    mayori          reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    menor           reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    menori          reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    igual           reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    diferente       reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    band            reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    and             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    bor             reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    or              reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    shiftizq        reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    shiftder        reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    bxor            reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    t_xor           reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    PTCOMA          reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    cor2            reduce using rule 79 (exp8 -> par1 t_char par2 exp .)
    par2            reduce using rule 79 (exp8 -> par1 t_char par2 exp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for bxor in state 44 resolved as shift
WARNING: shift/reduce conflict for t_xor in state 44 resolved as shift
WARNING: shift/reduce conflict for bor in state 45 resolved as shift
WARNING: shift/reduce conflict for or in state 45 resolved as shift
WARNING: shift/reduce conflict for shiftizq in state 45 resolved as shift
WARNING: shift/reduce conflict for shiftder in state 45 resolved as shift
WARNING: shift/reduce conflict for band in state 46 resolved as shift
WARNING: shift/reduce conflict for and in state 46 resolved as shift
WARNING: shift/reduce conflict for igual in state 47 resolved as shift
WARNING: shift/reduce conflict for diferente in state 47 resolved as shift
WARNING: shift/reduce conflict for mayor in state 48 resolved as shift
WARNING: shift/reduce conflict for mayori in state 48 resolved as shift
WARNING: shift/reduce conflict for menor in state 48 resolved as shift
WARNING: shift/reduce conflict for menori in state 48 resolved as shift
WARNING: shift/reduce conflict for mas in state 49 resolved as shift
WARNING: shift/reduce conflict for res in state 49 resolved as shift
WARNING: shift/reduce conflict for por in state 51 resolved as shift
WARNING: shift/reduce conflict for div in state 51 resolved as shift
WARNING: shift/reduce conflict for mod in state 51 resolved as shift
