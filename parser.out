Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    t_array

Grammar

Rule 0     S' -> s
Rule 1     s -> etiquetas
Rule 2     etiquetas -> etiquetas etiqueta
Rule 3     etiquetas -> etiqueta
Rule 4     sentencias -> sentencias sentencia
Rule 5     sentencias -> sentencia
Rule 6     etiqueta -> iden bipunto sentencias
Rule 7     sentencia -> asignacion
Rule 8     sentencia -> GOTO
Rule 9     sentencia -> UNSET
Rule 10    sentencia -> PRINT
Rule 11    sentencia -> EXIT
Rule 12    sentencia -> ASIGNACION_ARR
Rule 13    sentencia -> as_puntero
Rule 14    ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA
Rule 15    UNSET -> t_unset par1 asignado par2 PTCOMA
Rule 16    GOTO -> t_goto iden bipunto
Rule 17    PRINT -> t_print par1 exp par2 PTCOMA
Rule 18    asignacion -> asignado asigna exp PTCOMA
Rule 19    as_puntero -> asignado asigna depuntero asignado PTCOMA
Rule 20    EXIT -> t_exit PTCOMA
Rule 21    asignado -> TEMPORAL
Rule 22    asignado -> puntero
Rule 23    asignado -> direccion
Rule 24    asignado -> parametro
Rule 25    asignado -> devfunc
Rule 26    asignado -> pila
Rule 27    asignado -> iden
Rule 28    exp -> exp1 bxor exp1
Rule 29    exp -> exp1 t_xor exp1
Rule 30    exp -> exp1
Rule 31    exp1 -> exp2 bor exp2
Rule 32    exp1 -> exp2 or exp2
Rule 33    exp1 -> exp2 shiftizq exp2
Rule 34    exp1 -> exp2 shiftder exp2
Rule 35    exp1 -> exp2
Rule 36    exp2 -> exp3 band exp3
Rule 37    exp2 -> exp3 and exp3
Rule 38    exp2 -> exp3
Rule 39    exp3 -> exp4 igual exp4
Rule 40    exp3 -> exp4 diferente exp4
Rule 41    exp3 -> exp4
Rule 42    exp4 -> exp5 mayor exp5
Rule 43    exp4 -> exp5 mayori exp5
Rule 44    exp4 -> exp5 menor exp5
Rule 45    exp4 -> exp5 menori exp5
Rule 46    exp4 -> exp5
Rule 47    exp5 -> exp6 mas exp6
Rule 48    exp5 -> exp6 res exp6
Rule 49    exp5 -> exp6
Rule 50    exp6 -> exp7 por exp7
Rule 51    exp6 -> exp7 div exp7
Rule 52    exp6 -> exp7 mod exp7
Rule 53    exp6 -> t_abs par1 exp7 par2
Rule 54    exp6 -> exp7
Rule 55    exp7 -> res exp11
Rule 56    exp7 -> not exp11
Rule 57    exp7 -> bnot exp11
Rule 58    exp11 -> asignado L_ACCESOS
Rule 59    L_ACCESOS -> L_ACCESOS acceso
Rule 60    L_ACCESOS -> acceso
Rule 61    acceso -> cor1 exp8 cor2
Rule 62    exp11 -> exp8
Rule 63    exp7 -> exp11
Rule 64    exp8 -> string
Rule 65    exp8 -> iden
Rule 66    exp8 -> entero
Rule 67    exp8 -> decimal
Rule 68    exp8 -> TEMPORAL
Rule 69    exp8 -> puntero
Rule 70    exp8 -> direccion
Rule 71    exp8 -> parametro
Rule 72    exp8 -> devfunc
Rule 73    exp8 -> pila
Rule 74    exp8 -> par1 t_int par2 exp
Rule 75    exp8 -> par1 t_float par2 exp
Rule 76    exp8 -> par1 t_char par2 exp
Rule 77    exp8 -> t_read par1 par2

Terminals, with rules where they appear

PTCOMA               : 14 15 17 18 19 20
TEMPORAL             : 21 68
and                  : 37
asigna               : 18 19
band                 : 36
bipunto              : 6 16
bnot                 : 57
bor                  : 31
bxor                 : 28
cor1                 : 61
cor2                 : 61
decimal              : 67
depuntero            : 19
devfunc              : 25 72
diferente            : 40
direccion            : 23 70
div                  : 51
entero               : 66
error                : 
iden                 : 6 16 27 65
igual                : 39
mas                  : 47
mayor                : 42
mayori               : 43
menor                : 44
menori               : 45
mod                  : 52
not                  : 56
or                   : 32
par1                 : 15 17 53 74 75 76 77
par2                 : 15 17 53 74 75 76 77
parametro            : 24 71
pila                 : 26 73
por                  : 50
puntero              : 22 69
res                  : 48 55
shiftder             : 34
shiftizq             : 33
string               : 64
t_abs                : 53
t_array              : 
t_char               : 76
t_exit               : 20
t_float              : 75
t_goto               : 16
t_int                : 74
t_print              : 17
t_read               : 77
t_unset              : 15
t_xor                : 29

Nonterminals, with rules where they appear

ASIGNACION_ARR       : 12
EXIT                 : 11
GOTO                 : 8
L_ACCESOS            : 14 58 59
PRINT                : 10
UNSET                : 9
acceso               : 59 60
as_puntero           : 13
asignacion           : 7
asignado             : 14 14 15 18 19 19 58
etiqueta             : 2 3
etiquetas            : 1 2
exp                  : 14 17 18 74 75 76
exp1                 : 28 28 29 29 30
exp11                : 55 56 57 63
exp2                 : 31 31 32 32 33 33 34 34 35
exp3                 : 36 36 37 37 38
exp4                 : 39 39 40 40 41
exp5                 : 42 42 43 43 44 44 45 45 46
exp6                 : 47 47 48 48 49
exp7                 : 50 50 51 51 52 52 53 54
exp8                 : 61 62
s                    : 0
sentencia            : 4 5
sentencias           : 4 6

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . etiquetas
    (2) etiquetas -> . etiquetas etiqueta
    (3) etiquetas -> . etiqueta
    (6) etiqueta -> . iden bipunto sentencias

    iden            shift and go to state 4

    s                              shift and go to state 1
    etiquetas                      shift and go to state 2
    etiqueta                       shift and go to state 3

state 1

    (0) S' -> s .



state 2

    (1) s -> etiquetas .
    (2) etiquetas -> etiquetas . etiqueta
    (6) etiqueta -> . iden bipunto sentencias

    $end            reduce using rule 1 (s -> etiquetas .)
    iden            shift and go to state 4

    etiqueta                       shift and go to state 5

state 3

    (3) etiquetas -> etiqueta .

    iden            reduce using rule 3 (etiquetas -> etiqueta .)
    $end            reduce using rule 3 (etiquetas -> etiqueta .)


state 4

    (6) etiqueta -> iden . bipunto sentencias

    bipunto         shift and go to state 6


state 5

    (2) etiquetas -> etiquetas etiqueta .

    iden            reduce using rule 2 (etiquetas -> etiquetas etiqueta .)
    $end            reduce using rule 2 (etiquetas -> etiquetas etiqueta .)


state 6

    (6) etiqueta -> iden bipunto . sentencias
    (4) sentencias -> . sentencias sentencia
    (5) sentencias -> . sentencia
    (7) sentencia -> . asignacion
    (8) sentencia -> . GOTO
    (9) sentencia -> . UNSET
    (10) sentencia -> . PRINT
    (11) sentencia -> . EXIT
    (12) sentencia -> . ASIGNACION_ARR
    (13) sentencia -> . as_puntero
    (18) asignacion -> . asignado asigna exp PTCOMA
    (16) GOTO -> . t_goto iden bipunto
    (15) UNSET -> . t_unset par1 asignado par2 PTCOMA
    (17) PRINT -> . t_print par1 exp par2 PTCOMA
    (20) EXIT -> . t_exit PTCOMA
    (14) ASIGNACION_ARR -> . asignado L_ACCESOS asignado exp PTCOMA
    (19) as_puntero -> . asignado asigna depuntero asignado PTCOMA
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden

    t_goto          shift and go to state 18
    t_unset         shift and go to state 19
    t_print         shift and go to state 20
    t_exit          shift and go to state 21
    TEMPORAL        shift and go to state 22
    puntero         shift and go to state 23
    direccion       shift and go to state 24
    parametro       shift and go to state 25
    devfunc         shift and go to state 26
    pila            shift and go to state 27
    iden            shift and go to state 7

    sentencias                     shift and go to state 8
    sentencia                      shift and go to state 9
    asignacion                     shift and go to state 10
    GOTO                           shift and go to state 11
    UNSET                          shift and go to state 12
    PRINT                          shift and go to state 13
    EXIT                           shift and go to state 14
    ASIGNACION_ARR                 shift and go to state 15
    as_puntero                     shift and go to state 16
    asignado                       shift and go to state 17

state 7

    (27) asignado -> iden .

    asigna          reduce using rule 27 (asignado -> iden .)
    cor1            reduce using rule 27 (asignado -> iden .)
    t_abs           reduce using rule 27 (asignado -> iden .)
    res             reduce using rule 27 (asignado -> iden .)
    not             reduce using rule 27 (asignado -> iden .)
    bnot            reduce using rule 27 (asignado -> iden .)
    TEMPORAL        reduce using rule 27 (asignado -> iden .)
    puntero         reduce using rule 27 (asignado -> iden .)
    direccion       reduce using rule 27 (asignado -> iden .)
    parametro       reduce using rule 27 (asignado -> iden .)
    devfunc         reduce using rule 27 (asignado -> iden .)
    pila            reduce using rule 27 (asignado -> iden .)
    iden            reduce using rule 27 (asignado -> iden .)
    string          reduce using rule 27 (asignado -> iden .)
    entero          reduce using rule 27 (asignado -> iden .)
    decimal         reduce using rule 27 (asignado -> iden .)
    par1            reduce using rule 27 (asignado -> iden .)
    t_read          reduce using rule 27 (asignado -> iden .)
    par2            reduce using rule 27 (asignado -> iden .)
    PTCOMA          reduce using rule 27 (asignado -> iden .)


state 8

    (6) etiqueta -> iden bipunto sentencias .
    (4) sentencias -> sentencias . sentencia
    (7) sentencia -> . asignacion
    (8) sentencia -> . GOTO
    (9) sentencia -> . UNSET
    (10) sentencia -> . PRINT
    (11) sentencia -> . EXIT
    (12) sentencia -> . ASIGNACION_ARR
    (13) sentencia -> . as_puntero
    (18) asignacion -> . asignado asigna exp PTCOMA
    (16) GOTO -> . t_goto iden bipunto
    (15) UNSET -> . t_unset par1 asignado par2 PTCOMA
    (17) PRINT -> . t_print par1 exp par2 PTCOMA
    (20) EXIT -> . t_exit PTCOMA
    (14) ASIGNACION_ARR -> . asignado L_ACCESOS asignado exp PTCOMA
    (19) as_puntero -> . asignado asigna depuntero asignado PTCOMA
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden

  ! shift/reduce conflict for iden resolved as shift
    $end            reduce using rule 6 (etiqueta -> iden bipunto sentencias .)
    t_goto          shift and go to state 18
    t_unset         shift and go to state 19
    t_print         shift and go to state 20
    t_exit          shift and go to state 21
    TEMPORAL        shift and go to state 22
    puntero         shift and go to state 23
    direccion       shift and go to state 24
    parametro       shift and go to state 25
    devfunc         shift and go to state 26
    pila            shift and go to state 27
    iden            shift and go to state 7

  ! iden            [ reduce using rule 6 (etiqueta -> iden bipunto sentencias .) ]

    sentencia                      shift and go to state 28
    asignacion                     shift and go to state 10
    GOTO                           shift and go to state 11
    UNSET                          shift and go to state 12
    PRINT                          shift and go to state 13
    EXIT                           shift and go to state 14
    ASIGNACION_ARR                 shift and go to state 15
    as_puntero                     shift and go to state 16
    asignado                       shift and go to state 17

state 9

    (5) sentencias -> sentencia .

    t_goto          reduce using rule 5 (sentencias -> sentencia .)
    t_unset         reduce using rule 5 (sentencias -> sentencia .)
    t_print         reduce using rule 5 (sentencias -> sentencia .)
    t_exit          reduce using rule 5 (sentencias -> sentencia .)
    TEMPORAL        reduce using rule 5 (sentencias -> sentencia .)
    puntero         reduce using rule 5 (sentencias -> sentencia .)
    direccion       reduce using rule 5 (sentencias -> sentencia .)
    parametro       reduce using rule 5 (sentencias -> sentencia .)
    devfunc         reduce using rule 5 (sentencias -> sentencia .)
    pila            reduce using rule 5 (sentencias -> sentencia .)
    iden            reduce using rule 5 (sentencias -> sentencia .)
    $end            reduce using rule 5 (sentencias -> sentencia .)


state 10

    (7) sentencia -> asignacion .

    t_goto          reduce using rule 7 (sentencia -> asignacion .)
    t_unset         reduce using rule 7 (sentencia -> asignacion .)
    t_print         reduce using rule 7 (sentencia -> asignacion .)
    t_exit          reduce using rule 7 (sentencia -> asignacion .)
    TEMPORAL        reduce using rule 7 (sentencia -> asignacion .)
    puntero         reduce using rule 7 (sentencia -> asignacion .)
    direccion       reduce using rule 7 (sentencia -> asignacion .)
    parametro       reduce using rule 7 (sentencia -> asignacion .)
    devfunc         reduce using rule 7 (sentencia -> asignacion .)
    pila            reduce using rule 7 (sentencia -> asignacion .)
    iden            reduce using rule 7 (sentencia -> asignacion .)
    $end            reduce using rule 7 (sentencia -> asignacion .)


state 11

    (8) sentencia -> GOTO .

    t_goto          reduce using rule 8 (sentencia -> GOTO .)
    t_unset         reduce using rule 8 (sentencia -> GOTO .)
    t_print         reduce using rule 8 (sentencia -> GOTO .)
    t_exit          reduce using rule 8 (sentencia -> GOTO .)
    TEMPORAL        reduce using rule 8 (sentencia -> GOTO .)
    puntero         reduce using rule 8 (sentencia -> GOTO .)
    direccion       reduce using rule 8 (sentencia -> GOTO .)
    parametro       reduce using rule 8 (sentencia -> GOTO .)
    devfunc         reduce using rule 8 (sentencia -> GOTO .)
    pila            reduce using rule 8 (sentencia -> GOTO .)
    iden            reduce using rule 8 (sentencia -> GOTO .)
    $end            reduce using rule 8 (sentencia -> GOTO .)


state 12

    (9) sentencia -> UNSET .

    t_goto          reduce using rule 9 (sentencia -> UNSET .)
    t_unset         reduce using rule 9 (sentencia -> UNSET .)
    t_print         reduce using rule 9 (sentencia -> UNSET .)
    t_exit          reduce using rule 9 (sentencia -> UNSET .)
    TEMPORAL        reduce using rule 9 (sentencia -> UNSET .)
    puntero         reduce using rule 9 (sentencia -> UNSET .)
    direccion       reduce using rule 9 (sentencia -> UNSET .)
    parametro       reduce using rule 9 (sentencia -> UNSET .)
    devfunc         reduce using rule 9 (sentencia -> UNSET .)
    pila            reduce using rule 9 (sentencia -> UNSET .)
    iden            reduce using rule 9 (sentencia -> UNSET .)
    $end            reduce using rule 9 (sentencia -> UNSET .)


state 13

    (10) sentencia -> PRINT .

    t_goto          reduce using rule 10 (sentencia -> PRINT .)
    t_unset         reduce using rule 10 (sentencia -> PRINT .)
    t_print         reduce using rule 10 (sentencia -> PRINT .)
    t_exit          reduce using rule 10 (sentencia -> PRINT .)
    TEMPORAL        reduce using rule 10 (sentencia -> PRINT .)
    puntero         reduce using rule 10 (sentencia -> PRINT .)
    direccion       reduce using rule 10 (sentencia -> PRINT .)
    parametro       reduce using rule 10 (sentencia -> PRINT .)
    devfunc         reduce using rule 10 (sentencia -> PRINT .)
    pila            reduce using rule 10 (sentencia -> PRINT .)
    iden            reduce using rule 10 (sentencia -> PRINT .)
    $end            reduce using rule 10 (sentencia -> PRINT .)


state 14

    (11) sentencia -> EXIT .

    t_goto          reduce using rule 11 (sentencia -> EXIT .)
    t_unset         reduce using rule 11 (sentencia -> EXIT .)
    t_print         reduce using rule 11 (sentencia -> EXIT .)
    t_exit          reduce using rule 11 (sentencia -> EXIT .)
    TEMPORAL        reduce using rule 11 (sentencia -> EXIT .)
    puntero         reduce using rule 11 (sentencia -> EXIT .)
    direccion       reduce using rule 11 (sentencia -> EXIT .)
    parametro       reduce using rule 11 (sentencia -> EXIT .)
    devfunc         reduce using rule 11 (sentencia -> EXIT .)
    pila            reduce using rule 11 (sentencia -> EXIT .)
    iden            reduce using rule 11 (sentencia -> EXIT .)
    $end            reduce using rule 11 (sentencia -> EXIT .)


state 15

    (12) sentencia -> ASIGNACION_ARR .

    t_goto          reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    t_unset         reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    t_print         reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    t_exit          reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    TEMPORAL        reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    puntero         reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    direccion       reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    parametro       reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    devfunc         reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    pila            reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    iden            reduce using rule 12 (sentencia -> ASIGNACION_ARR .)
    $end            reduce using rule 12 (sentencia -> ASIGNACION_ARR .)


state 16

    (13) sentencia -> as_puntero .

    t_goto          reduce using rule 13 (sentencia -> as_puntero .)
    t_unset         reduce using rule 13 (sentencia -> as_puntero .)
    t_print         reduce using rule 13 (sentencia -> as_puntero .)
    t_exit          reduce using rule 13 (sentencia -> as_puntero .)
    TEMPORAL        reduce using rule 13 (sentencia -> as_puntero .)
    puntero         reduce using rule 13 (sentencia -> as_puntero .)
    direccion       reduce using rule 13 (sentencia -> as_puntero .)
    parametro       reduce using rule 13 (sentencia -> as_puntero .)
    devfunc         reduce using rule 13 (sentencia -> as_puntero .)
    pila            reduce using rule 13 (sentencia -> as_puntero .)
    iden            reduce using rule 13 (sentencia -> as_puntero .)
    $end            reduce using rule 13 (sentencia -> as_puntero .)


state 17

    (18) asignacion -> asignado . asigna exp PTCOMA
    (14) ASIGNACION_ARR -> asignado . L_ACCESOS asignado exp PTCOMA
    (19) as_puntero -> asignado . asigna depuntero asignado PTCOMA
    (59) L_ACCESOS -> . L_ACCESOS acceso
    (60) L_ACCESOS -> . acceso
    (61) acceso -> . cor1 exp8 cor2

    asigna          shift and go to state 29
    cor1            shift and go to state 32

    L_ACCESOS                      shift and go to state 30
    acceso                         shift and go to state 31

state 18

    (16) GOTO -> t_goto . iden bipunto

    iden            shift and go to state 33


state 19

    (15) UNSET -> t_unset . par1 asignado par2 PTCOMA

    par1            shift and go to state 34


state 20

    (17) PRINT -> t_print . par1 exp par2 PTCOMA

    par1            shift and go to state 35


state 21

    (20) EXIT -> t_exit . PTCOMA

    PTCOMA          shift and go to state 36


state 22

    (21) asignado -> TEMPORAL .

    asigna          reduce using rule 21 (asignado -> TEMPORAL .)
    cor1            reduce using rule 21 (asignado -> TEMPORAL .)
    t_abs           reduce using rule 21 (asignado -> TEMPORAL .)
    res             reduce using rule 21 (asignado -> TEMPORAL .)
    not             reduce using rule 21 (asignado -> TEMPORAL .)
    bnot            reduce using rule 21 (asignado -> TEMPORAL .)
    TEMPORAL        reduce using rule 21 (asignado -> TEMPORAL .)
    puntero         reduce using rule 21 (asignado -> TEMPORAL .)
    direccion       reduce using rule 21 (asignado -> TEMPORAL .)
    parametro       reduce using rule 21 (asignado -> TEMPORAL .)
    devfunc         reduce using rule 21 (asignado -> TEMPORAL .)
    pila            reduce using rule 21 (asignado -> TEMPORAL .)
    iden            reduce using rule 21 (asignado -> TEMPORAL .)
    string          reduce using rule 21 (asignado -> TEMPORAL .)
    entero          reduce using rule 21 (asignado -> TEMPORAL .)
    decimal         reduce using rule 21 (asignado -> TEMPORAL .)
    par1            reduce using rule 21 (asignado -> TEMPORAL .)
    t_read          reduce using rule 21 (asignado -> TEMPORAL .)
    par2            reduce using rule 21 (asignado -> TEMPORAL .)
    PTCOMA          reduce using rule 21 (asignado -> TEMPORAL .)


state 23

    (22) asignado -> puntero .

    asigna          reduce using rule 22 (asignado -> puntero .)
    cor1            reduce using rule 22 (asignado -> puntero .)
    t_abs           reduce using rule 22 (asignado -> puntero .)
    res             reduce using rule 22 (asignado -> puntero .)
    not             reduce using rule 22 (asignado -> puntero .)
    bnot            reduce using rule 22 (asignado -> puntero .)
    TEMPORAL        reduce using rule 22 (asignado -> puntero .)
    puntero         reduce using rule 22 (asignado -> puntero .)
    direccion       reduce using rule 22 (asignado -> puntero .)
    parametro       reduce using rule 22 (asignado -> puntero .)
    devfunc         reduce using rule 22 (asignado -> puntero .)
    pila            reduce using rule 22 (asignado -> puntero .)
    iden            reduce using rule 22 (asignado -> puntero .)
    string          reduce using rule 22 (asignado -> puntero .)
    entero          reduce using rule 22 (asignado -> puntero .)
    decimal         reduce using rule 22 (asignado -> puntero .)
    par1            reduce using rule 22 (asignado -> puntero .)
    t_read          reduce using rule 22 (asignado -> puntero .)
    par2            reduce using rule 22 (asignado -> puntero .)
    PTCOMA          reduce using rule 22 (asignado -> puntero .)


state 24

    (23) asignado -> direccion .

    asigna          reduce using rule 23 (asignado -> direccion .)
    cor1            reduce using rule 23 (asignado -> direccion .)
    t_abs           reduce using rule 23 (asignado -> direccion .)
    res             reduce using rule 23 (asignado -> direccion .)
    not             reduce using rule 23 (asignado -> direccion .)
    bnot            reduce using rule 23 (asignado -> direccion .)
    TEMPORAL        reduce using rule 23 (asignado -> direccion .)
    puntero         reduce using rule 23 (asignado -> direccion .)
    direccion       reduce using rule 23 (asignado -> direccion .)
    parametro       reduce using rule 23 (asignado -> direccion .)
    devfunc         reduce using rule 23 (asignado -> direccion .)
    pila            reduce using rule 23 (asignado -> direccion .)
    iden            reduce using rule 23 (asignado -> direccion .)
    string          reduce using rule 23 (asignado -> direccion .)
    entero          reduce using rule 23 (asignado -> direccion .)
    decimal         reduce using rule 23 (asignado -> direccion .)
    par1            reduce using rule 23 (asignado -> direccion .)
    t_read          reduce using rule 23 (asignado -> direccion .)
    par2            reduce using rule 23 (asignado -> direccion .)
    PTCOMA          reduce using rule 23 (asignado -> direccion .)


state 25

    (24) asignado -> parametro .

    asigna          reduce using rule 24 (asignado -> parametro .)
    cor1            reduce using rule 24 (asignado -> parametro .)
    t_abs           reduce using rule 24 (asignado -> parametro .)
    res             reduce using rule 24 (asignado -> parametro .)
    not             reduce using rule 24 (asignado -> parametro .)
    bnot            reduce using rule 24 (asignado -> parametro .)
    TEMPORAL        reduce using rule 24 (asignado -> parametro .)
    puntero         reduce using rule 24 (asignado -> parametro .)
    direccion       reduce using rule 24 (asignado -> parametro .)
    parametro       reduce using rule 24 (asignado -> parametro .)
    devfunc         reduce using rule 24 (asignado -> parametro .)
    pila            reduce using rule 24 (asignado -> parametro .)
    iden            reduce using rule 24 (asignado -> parametro .)
    string          reduce using rule 24 (asignado -> parametro .)
    entero          reduce using rule 24 (asignado -> parametro .)
    decimal         reduce using rule 24 (asignado -> parametro .)
    par1            reduce using rule 24 (asignado -> parametro .)
    t_read          reduce using rule 24 (asignado -> parametro .)
    par2            reduce using rule 24 (asignado -> parametro .)
    PTCOMA          reduce using rule 24 (asignado -> parametro .)


state 26

    (25) asignado -> devfunc .

    asigna          reduce using rule 25 (asignado -> devfunc .)
    cor1            reduce using rule 25 (asignado -> devfunc .)
    t_abs           reduce using rule 25 (asignado -> devfunc .)
    res             reduce using rule 25 (asignado -> devfunc .)
    not             reduce using rule 25 (asignado -> devfunc .)
    bnot            reduce using rule 25 (asignado -> devfunc .)
    TEMPORAL        reduce using rule 25 (asignado -> devfunc .)
    puntero         reduce using rule 25 (asignado -> devfunc .)
    direccion       reduce using rule 25 (asignado -> devfunc .)
    parametro       reduce using rule 25 (asignado -> devfunc .)
    devfunc         reduce using rule 25 (asignado -> devfunc .)
    pila            reduce using rule 25 (asignado -> devfunc .)
    iden            reduce using rule 25 (asignado -> devfunc .)
    string          reduce using rule 25 (asignado -> devfunc .)
    entero          reduce using rule 25 (asignado -> devfunc .)
    decimal         reduce using rule 25 (asignado -> devfunc .)
    par1            reduce using rule 25 (asignado -> devfunc .)
    t_read          reduce using rule 25 (asignado -> devfunc .)
    par2            reduce using rule 25 (asignado -> devfunc .)
    PTCOMA          reduce using rule 25 (asignado -> devfunc .)


state 27

    (26) asignado -> pila .

    asigna          reduce using rule 26 (asignado -> pila .)
    cor1            reduce using rule 26 (asignado -> pila .)
    t_abs           reduce using rule 26 (asignado -> pila .)
    res             reduce using rule 26 (asignado -> pila .)
    not             reduce using rule 26 (asignado -> pila .)
    bnot            reduce using rule 26 (asignado -> pila .)
    TEMPORAL        reduce using rule 26 (asignado -> pila .)
    puntero         reduce using rule 26 (asignado -> pila .)
    direccion       reduce using rule 26 (asignado -> pila .)
    parametro       reduce using rule 26 (asignado -> pila .)
    devfunc         reduce using rule 26 (asignado -> pila .)
    pila            reduce using rule 26 (asignado -> pila .)
    iden            reduce using rule 26 (asignado -> pila .)
    string          reduce using rule 26 (asignado -> pila .)
    entero          reduce using rule 26 (asignado -> pila .)
    decimal         reduce using rule 26 (asignado -> pila .)
    par1            reduce using rule 26 (asignado -> pila .)
    t_read          reduce using rule 26 (asignado -> pila .)
    par2            reduce using rule 26 (asignado -> pila .)
    PTCOMA          reduce using rule 26 (asignado -> pila .)


state 28

    (4) sentencias -> sentencias sentencia .

    t_goto          reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_unset         reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_print         reduce using rule 4 (sentencias -> sentencias sentencia .)
    t_exit          reduce using rule 4 (sentencias -> sentencias sentencia .)
    TEMPORAL        reduce using rule 4 (sentencias -> sentencias sentencia .)
    puntero         reduce using rule 4 (sentencias -> sentencias sentencia .)
    direccion       reduce using rule 4 (sentencias -> sentencias sentencia .)
    parametro       reduce using rule 4 (sentencias -> sentencias sentencia .)
    devfunc         reduce using rule 4 (sentencias -> sentencias sentencia .)
    pila            reduce using rule 4 (sentencias -> sentencias sentencia .)
    iden            reduce using rule 4 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 4 (sentencias -> sentencias sentencia .)


state 29

    (18) asignacion -> asignado asigna . exp PTCOMA
    (19) as_puntero -> asignado asigna . depuntero asignado PTCOMA
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    depuntero       shift and go to state 39
    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    asignado                       shift and go to state 37
    exp                            shift and go to state 38
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    exp8                           shift and go to state 53

state 30

    (14) ASIGNACION_ARR -> asignado L_ACCESOS . asignado exp PTCOMA
    (59) L_ACCESOS -> L_ACCESOS . acceso
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (61) acceso -> . cor1 exp8 cor2

    TEMPORAL        shift and go to state 22
    puntero         shift and go to state 23
    direccion       shift and go to state 24
    parametro       shift and go to state 25
    devfunc         shift and go to state 26
    pila            shift and go to state 27
    iden            shift and go to state 7
    cor1            shift and go to state 32

    asignado                       shift and go to state 65
    acceso                         shift and go to state 66

state 31

    (60) L_ACCESOS -> acceso .

    TEMPORAL        reduce using rule 60 (L_ACCESOS -> acceso .)
    puntero         reduce using rule 60 (L_ACCESOS -> acceso .)
    direccion       reduce using rule 60 (L_ACCESOS -> acceso .)
    parametro       reduce using rule 60 (L_ACCESOS -> acceso .)
    devfunc         reduce using rule 60 (L_ACCESOS -> acceso .)
    pila            reduce using rule 60 (L_ACCESOS -> acceso .)
    iden            reduce using rule 60 (L_ACCESOS -> acceso .)
    cor1            reduce using rule 60 (L_ACCESOS -> acceso .)
    por             reduce using rule 60 (L_ACCESOS -> acceso .)
    div             reduce using rule 60 (L_ACCESOS -> acceso .)
    mod             reduce using rule 60 (L_ACCESOS -> acceso .)
    mas             reduce using rule 60 (L_ACCESOS -> acceso .)
    res             reduce using rule 60 (L_ACCESOS -> acceso .)
    mayor           reduce using rule 60 (L_ACCESOS -> acceso .)
    mayori          reduce using rule 60 (L_ACCESOS -> acceso .)
    menor           reduce using rule 60 (L_ACCESOS -> acceso .)
    menori          reduce using rule 60 (L_ACCESOS -> acceso .)
    igual           reduce using rule 60 (L_ACCESOS -> acceso .)
    diferente       reduce using rule 60 (L_ACCESOS -> acceso .)
    band            reduce using rule 60 (L_ACCESOS -> acceso .)
    and             reduce using rule 60 (L_ACCESOS -> acceso .)
    bor             reduce using rule 60 (L_ACCESOS -> acceso .)
    or              reduce using rule 60 (L_ACCESOS -> acceso .)
    shiftizq        reduce using rule 60 (L_ACCESOS -> acceso .)
    shiftder        reduce using rule 60 (L_ACCESOS -> acceso .)
    bxor            reduce using rule 60 (L_ACCESOS -> acceso .)
    t_xor           reduce using rule 60 (L_ACCESOS -> acceso .)
    PTCOMA          reduce using rule 60 (L_ACCESOS -> acceso .)
    par2            reduce using rule 60 (L_ACCESOS -> acceso .)
    cor2            reduce using rule 60 (L_ACCESOS -> acceso .)


state 32

    (61) acceso -> cor1 . exp8 cor2
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    string          shift and go to state 61
    iden            shift and go to state 68
    entero          shift and go to state 62
    decimal         shift and go to state 63
    TEMPORAL        shift and go to state 69
    puntero         shift and go to state 70
    direccion       shift and go to state 71
    parametro       shift and go to state 72
    devfunc         shift and go to state 73
    pila            shift and go to state 74
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp8                           shift and go to state 67

state 33

    (16) GOTO -> t_goto iden . bipunto

    bipunto         shift and go to state 75


state 34

    (15) UNSET -> t_unset par1 . asignado par2 PTCOMA
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden

    TEMPORAL        shift and go to state 22
    puntero         shift and go to state 23
    direccion       shift and go to state 24
    parametro       shift and go to state 25
    devfunc         shift and go to state 26
    pila            shift and go to state 27
    iden            shift and go to state 7

    asignado                       shift and go to state 76

state 35

    (17) PRINT -> t_print par1 . exp par2 PTCOMA
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp                            shift and go to state 77
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 36

    (20) EXIT -> t_exit PTCOMA .

    t_goto          reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    t_unset         reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    t_print         reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    t_exit          reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    TEMPORAL        reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    puntero         reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    direccion       reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    parametro       reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    devfunc         reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    pila            reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    iden            reduce using rule 20 (EXIT -> t_exit PTCOMA .)
    $end            reduce using rule 20 (EXIT -> t_exit PTCOMA .)


state 37

    (58) exp11 -> asignado . L_ACCESOS
    (59) L_ACCESOS -> . L_ACCESOS acceso
    (60) L_ACCESOS -> . acceso
    (61) acceso -> . cor1 exp8 cor2

    cor1            shift and go to state 32

    L_ACCESOS                      shift and go to state 78
    acceso                         shift and go to state 31

state 38

    (18) asignacion -> asignado asigna exp . PTCOMA

    PTCOMA          shift and go to state 79


state 39

    (19) as_puntero -> asignado asigna depuntero . asignado PTCOMA
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden

    TEMPORAL        shift and go to state 22
    puntero         shift and go to state 23
    direccion       shift and go to state 24
    parametro       shift and go to state 25
    devfunc         shift and go to state 26
    pila            shift and go to state 27
    iden            shift and go to state 7

    asignado                       shift and go to state 80

state 40

    (28) exp -> exp1 . bxor exp1
    (29) exp -> exp1 . t_xor exp1
    (30) exp -> exp1 .

  ! shift/reduce conflict for bxor resolved as shift
  ! shift/reduce conflict for t_xor resolved as shift
    bxor            shift and go to state 81
    t_xor           shift and go to state 82
    PTCOMA          reduce using rule 30 (exp -> exp1 .)
    par2            reduce using rule 30 (exp -> exp1 .)
    por             reduce using rule 30 (exp -> exp1 .)
    div             reduce using rule 30 (exp -> exp1 .)
    mod             reduce using rule 30 (exp -> exp1 .)
    mas             reduce using rule 30 (exp -> exp1 .)
    res             reduce using rule 30 (exp -> exp1 .)
    mayor           reduce using rule 30 (exp -> exp1 .)
    mayori          reduce using rule 30 (exp -> exp1 .)
    menor           reduce using rule 30 (exp -> exp1 .)
    menori          reduce using rule 30 (exp -> exp1 .)
    igual           reduce using rule 30 (exp -> exp1 .)
    diferente       reduce using rule 30 (exp -> exp1 .)
    band            reduce using rule 30 (exp -> exp1 .)
    and             reduce using rule 30 (exp -> exp1 .)
    bor             reduce using rule 30 (exp -> exp1 .)
    or              reduce using rule 30 (exp -> exp1 .)
    shiftizq        reduce using rule 30 (exp -> exp1 .)
    shiftder        reduce using rule 30 (exp -> exp1 .)
    cor2            reduce using rule 30 (exp -> exp1 .)

  ! bxor            [ reduce using rule 30 (exp -> exp1 .) ]
  ! t_xor           [ reduce using rule 30 (exp -> exp1 .) ]


state 41

    (31) exp1 -> exp2 . bor exp2
    (32) exp1 -> exp2 . or exp2
    (33) exp1 -> exp2 . shiftizq exp2
    (34) exp1 -> exp2 . shiftder exp2
    (35) exp1 -> exp2 .

  ! shift/reduce conflict for bor resolved as shift
  ! shift/reduce conflict for or resolved as shift
  ! shift/reduce conflict for shiftizq resolved as shift
  ! shift/reduce conflict for shiftder resolved as shift
    bor             shift and go to state 83
    or              shift and go to state 84
    shiftizq        shift and go to state 85
    shiftder        shift and go to state 86
    bxor            reduce using rule 35 (exp1 -> exp2 .)
    t_xor           reduce using rule 35 (exp1 -> exp2 .)
    PTCOMA          reduce using rule 35 (exp1 -> exp2 .)
    par2            reduce using rule 35 (exp1 -> exp2 .)
    por             reduce using rule 35 (exp1 -> exp2 .)
    div             reduce using rule 35 (exp1 -> exp2 .)
    mod             reduce using rule 35 (exp1 -> exp2 .)
    mas             reduce using rule 35 (exp1 -> exp2 .)
    res             reduce using rule 35 (exp1 -> exp2 .)
    mayor           reduce using rule 35 (exp1 -> exp2 .)
    mayori          reduce using rule 35 (exp1 -> exp2 .)
    menor           reduce using rule 35 (exp1 -> exp2 .)
    menori          reduce using rule 35 (exp1 -> exp2 .)
    igual           reduce using rule 35 (exp1 -> exp2 .)
    diferente       reduce using rule 35 (exp1 -> exp2 .)
    band            reduce using rule 35 (exp1 -> exp2 .)
    and             reduce using rule 35 (exp1 -> exp2 .)
    cor2            reduce using rule 35 (exp1 -> exp2 .)

  ! bor             [ reduce using rule 35 (exp1 -> exp2 .) ]
  ! or              [ reduce using rule 35 (exp1 -> exp2 .) ]
  ! shiftizq        [ reduce using rule 35 (exp1 -> exp2 .) ]
  ! shiftder        [ reduce using rule 35 (exp1 -> exp2 .) ]


state 42

    (36) exp2 -> exp3 . band exp3
    (37) exp2 -> exp3 . and exp3
    (38) exp2 -> exp3 .

  ! shift/reduce conflict for band resolved as shift
  ! shift/reduce conflict for and resolved as shift
    band            shift and go to state 87
    and             shift and go to state 88
    bor             reduce using rule 38 (exp2 -> exp3 .)
    or              reduce using rule 38 (exp2 -> exp3 .)
    shiftizq        reduce using rule 38 (exp2 -> exp3 .)
    shiftder        reduce using rule 38 (exp2 -> exp3 .)
    bxor            reduce using rule 38 (exp2 -> exp3 .)
    t_xor           reduce using rule 38 (exp2 -> exp3 .)
    PTCOMA          reduce using rule 38 (exp2 -> exp3 .)
    par2            reduce using rule 38 (exp2 -> exp3 .)
    por             reduce using rule 38 (exp2 -> exp3 .)
    div             reduce using rule 38 (exp2 -> exp3 .)
    mod             reduce using rule 38 (exp2 -> exp3 .)
    mas             reduce using rule 38 (exp2 -> exp3 .)
    res             reduce using rule 38 (exp2 -> exp3 .)
    mayor           reduce using rule 38 (exp2 -> exp3 .)
    mayori          reduce using rule 38 (exp2 -> exp3 .)
    menor           reduce using rule 38 (exp2 -> exp3 .)
    menori          reduce using rule 38 (exp2 -> exp3 .)
    igual           reduce using rule 38 (exp2 -> exp3 .)
    diferente       reduce using rule 38 (exp2 -> exp3 .)
    cor2            reduce using rule 38 (exp2 -> exp3 .)

  ! band            [ reduce using rule 38 (exp2 -> exp3 .) ]
  ! and             [ reduce using rule 38 (exp2 -> exp3 .) ]


state 43

    (39) exp3 -> exp4 . igual exp4
    (40) exp3 -> exp4 . diferente exp4
    (41) exp3 -> exp4 .

  ! shift/reduce conflict for igual resolved as shift
  ! shift/reduce conflict for diferente resolved as shift
    igual           shift and go to state 89
    diferente       shift and go to state 90
    band            reduce using rule 41 (exp3 -> exp4 .)
    and             reduce using rule 41 (exp3 -> exp4 .)
    bor             reduce using rule 41 (exp3 -> exp4 .)
    or              reduce using rule 41 (exp3 -> exp4 .)
    shiftizq        reduce using rule 41 (exp3 -> exp4 .)
    shiftder        reduce using rule 41 (exp3 -> exp4 .)
    bxor            reduce using rule 41 (exp3 -> exp4 .)
    t_xor           reduce using rule 41 (exp3 -> exp4 .)
    PTCOMA          reduce using rule 41 (exp3 -> exp4 .)
    par2            reduce using rule 41 (exp3 -> exp4 .)
    por             reduce using rule 41 (exp3 -> exp4 .)
    div             reduce using rule 41 (exp3 -> exp4 .)
    mod             reduce using rule 41 (exp3 -> exp4 .)
    mas             reduce using rule 41 (exp3 -> exp4 .)
    res             reduce using rule 41 (exp3 -> exp4 .)
    mayor           reduce using rule 41 (exp3 -> exp4 .)
    mayori          reduce using rule 41 (exp3 -> exp4 .)
    menor           reduce using rule 41 (exp3 -> exp4 .)
    menori          reduce using rule 41 (exp3 -> exp4 .)
    cor2            reduce using rule 41 (exp3 -> exp4 .)

  ! igual           [ reduce using rule 41 (exp3 -> exp4 .) ]
  ! diferente       [ reduce using rule 41 (exp3 -> exp4 .) ]


state 44

    (42) exp4 -> exp5 . mayor exp5
    (43) exp4 -> exp5 . mayori exp5
    (44) exp4 -> exp5 . menor exp5
    (45) exp4 -> exp5 . menori exp5
    (46) exp4 -> exp5 .

  ! shift/reduce conflict for mayor resolved as shift
  ! shift/reduce conflict for mayori resolved as shift
  ! shift/reduce conflict for menor resolved as shift
  ! shift/reduce conflict for menori resolved as shift
    mayor           shift and go to state 91
    mayori          shift and go to state 92
    menor           shift and go to state 93
    menori          shift and go to state 94
    igual           reduce using rule 46 (exp4 -> exp5 .)
    diferente       reduce using rule 46 (exp4 -> exp5 .)
    band            reduce using rule 46 (exp4 -> exp5 .)
    and             reduce using rule 46 (exp4 -> exp5 .)
    bor             reduce using rule 46 (exp4 -> exp5 .)
    or              reduce using rule 46 (exp4 -> exp5 .)
    shiftizq        reduce using rule 46 (exp4 -> exp5 .)
    shiftder        reduce using rule 46 (exp4 -> exp5 .)
    bxor            reduce using rule 46 (exp4 -> exp5 .)
    t_xor           reduce using rule 46 (exp4 -> exp5 .)
    PTCOMA          reduce using rule 46 (exp4 -> exp5 .)
    par2            reduce using rule 46 (exp4 -> exp5 .)
    por             reduce using rule 46 (exp4 -> exp5 .)
    div             reduce using rule 46 (exp4 -> exp5 .)
    mod             reduce using rule 46 (exp4 -> exp5 .)
    mas             reduce using rule 46 (exp4 -> exp5 .)
    res             reduce using rule 46 (exp4 -> exp5 .)
    cor2            reduce using rule 46 (exp4 -> exp5 .)

  ! mayor           [ reduce using rule 46 (exp4 -> exp5 .) ]
  ! mayori          [ reduce using rule 46 (exp4 -> exp5 .) ]
  ! menor           [ reduce using rule 46 (exp4 -> exp5 .) ]
  ! menori          [ reduce using rule 46 (exp4 -> exp5 .) ]


state 45

    (47) exp5 -> exp6 . mas exp6
    (48) exp5 -> exp6 . res exp6
    (49) exp5 -> exp6 .

  ! shift/reduce conflict for mas resolved as shift
  ! shift/reduce conflict for res resolved as shift
    mas             shift and go to state 95
    res             shift and go to state 96
    mayor           reduce using rule 49 (exp5 -> exp6 .)
    mayori          reduce using rule 49 (exp5 -> exp6 .)
    menor           reduce using rule 49 (exp5 -> exp6 .)
    menori          reduce using rule 49 (exp5 -> exp6 .)
    igual           reduce using rule 49 (exp5 -> exp6 .)
    diferente       reduce using rule 49 (exp5 -> exp6 .)
    band            reduce using rule 49 (exp5 -> exp6 .)
    and             reduce using rule 49 (exp5 -> exp6 .)
    bor             reduce using rule 49 (exp5 -> exp6 .)
    or              reduce using rule 49 (exp5 -> exp6 .)
    shiftizq        reduce using rule 49 (exp5 -> exp6 .)
    shiftder        reduce using rule 49 (exp5 -> exp6 .)
    bxor            reduce using rule 49 (exp5 -> exp6 .)
    t_xor           reduce using rule 49 (exp5 -> exp6 .)
    PTCOMA          reduce using rule 49 (exp5 -> exp6 .)
    par2            reduce using rule 49 (exp5 -> exp6 .)
    por             reduce using rule 49 (exp5 -> exp6 .)
    div             reduce using rule 49 (exp5 -> exp6 .)
    mod             reduce using rule 49 (exp5 -> exp6 .)
    cor2            reduce using rule 49 (exp5 -> exp6 .)

  ! mas             [ reduce using rule 49 (exp5 -> exp6 .) ]
  ! res             [ reduce using rule 49 (exp5 -> exp6 .) ]


state 46

    (55) exp7 -> res . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp11                          shift and go to state 97
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 47

    (50) exp6 -> exp7 . por exp7
    (51) exp6 -> exp7 . div exp7
    (52) exp6 -> exp7 . mod exp7
    (54) exp6 -> exp7 .

  ! shift/reduce conflict for por resolved as shift
  ! shift/reduce conflict for div resolved as shift
  ! shift/reduce conflict for mod resolved as shift
    por             shift and go to state 98
    div             shift and go to state 99
    mod             shift and go to state 100
    mas             reduce using rule 54 (exp6 -> exp7 .)
    res             reduce using rule 54 (exp6 -> exp7 .)
    mayor           reduce using rule 54 (exp6 -> exp7 .)
    mayori          reduce using rule 54 (exp6 -> exp7 .)
    menor           reduce using rule 54 (exp6 -> exp7 .)
    menori          reduce using rule 54 (exp6 -> exp7 .)
    igual           reduce using rule 54 (exp6 -> exp7 .)
    diferente       reduce using rule 54 (exp6 -> exp7 .)
    band            reduce using rule 54 (exp6 -> exp7 .)
    and             reduce using rule 54 (exp6 -> exp7 .)
    bor             reduce using rule 54 (exp6 -> exp7 .)
    or              reduce using rule 54 (exp6 -> exp7 .)
    shiftizq        reduce using rule 54 (exp6 -> exp7 .)
    shiftder        reduce using rule 54 (exp6 -> exp7 .)
    bxor            reduce using rule 54 (exp6 -> exp7 .)
    t_xor           reduce using rule 54 (exp6 -> exp7 .)
    PTCOMA          reduce using rule 54 (exp6 -> exp7 .)
    par2            reduce using rule 54 (exp6 -> exp7 .)
    cor2            reduce using rule 54 (exp6 -> exp7 .)

  ! por             [ reduce using rule 54 (exp6 -> exp7 .) ]
  ! div             [ reduce using rule 54 (exp6 -> exp7 .) ]
  ! mod             [ reduce using rule 54 (exp6 -> exp7 .) ]


state 48

    (53) exp6 -> t_abs . par1 exp7 par2

    par1            shift and go to state 101


state 49

    (74) exp8 -> par1 . t_int par2 exp
    (75) exp8 -> par1 . t_float par2 exp
    (76) exp8 -> par1 . t_char par2 exp

    t_int           shift and go to state 102
    t_float         shift and go to state 103
    t_char          shift and go to state 104


state 50

    (63) exp7 -> exp11 .

    por             reduce using rule 63 (exp7 -> exp11 .)
    div             reduce using rule 63 (exp7 -> exp11 .)
    mod             reduce using rule 63 (exp7 -> exp11 .)
    mas             reduce using rule 63 (exp7 -> exp11 .)
    res             reduce using rule 63 (exp7 -> exp11 .)
    mayor           reduce using rule 63 (exp7 -> exp11 .)
    mayori          reduce using rule 63 (exp7 -> exp11 .)
    menor           reduce using rule 63 (exp7 -> exp11 .)
    menori          reduce using rule 63 (exp7 -> exp11 .)
    igual           reduce using rule 63 (exp7 -> exp11 .)
    diferente       reduce using rule 63 (exp7 -> exp11 .)
    band            reduce using rule 63 (exp7 -> exp11 .)
    and             reduce using rule 63 (exp7 -> exp11 .)
    bor             reduce using rule 63 (exp7 -> exp11 .)
    or              reduce using rule 63 (exp7 -> exp11 .)
    shiftizq        reduce using rule 63 (exp7 -> exp11 .)
    shiftder        reduce using rule 63 (exp7 -> exp11 .)
    bxor            reduce using rule 63 (exp7 -> exp11 .)
    t_xor           reduce using rule 63 (exp7 -> exp11 .)
    PTCOMA          reduce using rule 63 (exp7 -> exp11 .)
    par2            reduce using rule 63 (exp7 -> exp11 .)
    cor2            reduce using rule 63 (exp7 -> exp11 .)


state 51

    (56) exp7 -> not . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp11                          shift and go to state 105
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 52

    (57) exp7 -> bnot . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp11                          shift and go to state 106
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 53

    (62) exp11 -> exp8 .

    por             reduce using rule 62 (exp11 -> exp8 .)
    div             reduce using rule 62 (exp11 -> exp8 .)
    mod             reduce using rule 62 (exp11 -> exp8 .)
    mas             reduce using rule 62 (exp11 -> exp8 .)
    res             reduce using rule 62 (exp11 -> exp8 .)
    mayor           reduce using rule 62 (exp11 -> exp8 .)
    mayori          reduce using rule 62 (exp11 -> exp8 .)
    menor           reduce using rule 62 (exp11 -> exp8 .)
    menori          reduce using rule 62 (exp11 -> exp8 .)
    igual           reduce using rule 62 (exp11 -> exp8 .)
    diferente       reduce using rule 62 (exp11 -> exp8 .)
    band            reduce using rule 62 (exp11 -> exp8 .)
    and             reduce using rule 62 (exp11 -> exp8 .)
    bor             reduce using rule 62 (exp11 -> exp8 .)
    or              reduce using rule 62 (exp11 -> exp8 .)
    shiftizq        reduce using rule 62 (exp11 -> exp8 .)
    shiftder        reduce using rule 62 (exp11 -> exp8 .)
    bxor            reduce using rule 62 (exp11 -> exp8 .)
    t_xor           reduce using rule 62 (exp11 -> exp8 .)
    PTCOMA          reduce using rule 62 (exp11 -> exp8 .)
    par2            reduce using rule 62 (exp11 -> exp8 .)
    cor2            reduce using rule 62 (exp11 -> exp8 .)


state 54

    (21) asignado -> TEMPORAL .
    (68) exp8 -> TEMPORAL .

    cor1            reduce using rule 21 (asignado -> TEMPORAL .)
    por             reduce using rule 68 (exp8 -> TEMPORAL .)
    div             reduce using rule 68 (exp8 -> TEMPORAL .)
    mod             reduce using rule 68 (exp8 -> TEMPORAL .)
    mas             reduce using rule 68 (exp8 -> TEMPORAL .)
    res             reduce using rule 68 (exp8 -> TEMPORAL .)
    mayor           reduce using rule 68 (exp8 -> TEMPORAL .)
    mayori          reduce using rule 68 (exp8 -> TEMPORAL .)
    menor           reduce using rule 68 (exp8 -> TEMPORAL .)
    menori          reduce using rule 68 (exp8 -> TEMPORAL .)
    igual           reduce using rule 68 (exp8 -> TEMPORAL .)
    diferente       reduce using rule 68 (exp8 -> TEMPORAL .)
    band            reduce using rule 68 (exp8 -> TEMPORAL .)
    and             reduce using rule 68 (exp8 -> TEMPORAL .)
    bor             reduce using rule 68 (exp8 -> TEMPORAL .)
    or              reduce using rule 68 (exp8 -> TEMPORAL .)
    shiftizq        reduce using rule 68 (exp8 -> TEMPORAL .)
    shiftder        reduce using rule 68 (exp8 -> TEMPORAL .)
    bxor            reduce using rule 68 (exp8 -> TEMPORAL .)
    t_xor           reduce using rule 68 (exp8 -> TEMPORAL .)
    PTCOMA          reduce using rule 68 (exp8 -> TEMPORAL .)
    par2            reduce using rule 68 (exp8 -> TEMPORAL .)
    cor2            reduce using rule 68 (exp8 -> TEMPORAL .)


state 55

    (22) asignado -> puntero .
    (69) exp8 -> puntero .

    cor1            reduce using rule 22 (asignado -> puntero .)
    por             reduce using rule 69 (exp8 -> puntero .)
    div             reduce using rule 69 (exp8 -> puntero .)
    mod             reduce using rule 69 (exp8 -> puntero .)
    mas             reduce using rule 69 (exp8 -> puntero .)
    res             reduce using rule 69 (exp8 -> puntero .)
    mayor           reduce using rule 69 (exp8 -> puntero .)
    mayori          reduce using rule 69 (exp8 -> puntero .)
    menor           reduce using rule 69 (exp8 -> puntero .)
    menori          reduce using rule 69 (exp8 -> puntero .)
    igual           reduce using rule 69 (exp8 -> puntero .)
    diferente       reduce using rule 69 (exp8 -> puntero .)
    band            reduce using rule 69 (exp8 -> puntero .)
    and             reduce using rule 69 (exp8 -> puntero .)
    bor             reduce using rule 69 (exp8 -> puntero .)
    or              reduce using rule 69 (exp8 -> puntero .)
    shiftizq        reduce using rule 69 (exp8 -> puntero .)
    shiftder        reduce using rule 69 (exp8 -> puntero .)
    bxor            reduce using rule 69 (exp8 -> puntero .)
    t_xor           reduce using rule 69 (exp8 -> puntero .)
    PTCOMA          reduce using rule 69 (exp8 -> puntero .)
    par2            reduce using rule 69 (exp8 -> puntero .)
    cor2            reduce using rule 69 (exp8 -> puntero .)


state 56

    (23) asignado -> direccion .
    (70) exp8 -> direccion .

    cor1            reduce using rule 23 (asignado -> direccion .)
    por             reduce using rule 70 (exp8 -> direccion .)
    div             reduce using rule 70 (exp8 -> direccion .)
    mod             reduce using rule 70 (exp8 -> direccion .)
    mas             reduce using rule 70 (exp8 -> direccion .)
    res             reduce using rule 70 (exp8 -> direccion .)
    mayor           reduce using rule 70 (exp8 -> direccion .)
    mayori          reduce using rule 70 (exp8 -> direccion .)
    menor           reduce using rule 70 (exp8 -> direccion .)
    menori          reduce using rule 70 (exp8 -> direccion .)
    igual           reduce using rule 70 (exp8 -> direccion .)
    diferente       reduce using rule 70 (exp8 -> direccion .)
    band            reduce using rule 70 (exp8 -> direccion .)
    and             reduce using rule 70 (exp8 -> direccion .)
    bor             reduce using rule 70 (exp8 -> direccion .)
    or              reduce using rule 70 (exp8 -> direccion .)
    shiftizq        reduce using rule 70 (exp8 -> direccion .)
    shiftder        reduce using rule 70 (exp8 -> direccion .)
    bxor            reduce using rule 70 (exp8 -> direccion .)
    t_xor           reduce using rule 70 (exp8 -> direccion .)
    PTCOMA          reduce using rule 70 (exp8 -> direccion .)
    par2            reduce using rule 70 (exp8 -> direccion .)
    cor2            reduce using rule 70 (exp8 -> direccion .)


state 57

    (24) asignado -> parametro .
    (71) exp8 -> parametro .

    cor1            reduce using rule 24 (asignado -> parametro .)
    por             reduce using rule 71 (exp8 -> parametro .)
    div             reduce using rule 71 (exp8 -> parametro .)
    mod             reduce using rule 71 (exp8 -> parametro .)
    mas             reduce using rule 71 (exp8 -> parametro .)
    res             reduce using rule 71 (exp8 -> parametro .)
    mayor           reduce using rule 71 (exp8 -> parametro .)
    mayori          reduce using rule 71 (exp8 -> parametro .)
    menor           reduce using rule 71 (exp8 -> parametro .)
    menori          reduce using rule 71 (exp8 -> parametro .)
    igual           reduce using rule 71 (exp8 -> parametro .)
    diferente       reduce using rule 71 (exp8 -> parametro .)
    band            reduce using rule 71 (exp8 -> parametro .)
    and             reduce using rule 71 (exp8 -> parametro .)
    bor             reduce using rule 71 (exp8 -> parametro .)
    or              reduce using rule 71 (exp8 -> parametro .)
    shiftizq        reduce using rule 71 (exp8 -> parametro .)
    shiftder        reduce using rule 71 (exp8 -> parametro .)
    bxor            reduce using rule 71 (exp8 -> parametro .)
    t_xor           reduce using rule 71 (exp8 -> parametro .)
    PTCOMA          reduce using rule 71 (exp8 -> parametro .)
    par2            reduce using rule 71 (exp8 -> parametro .)
    cor2            reduce using rule 71 (exp8 -> parametro .)


state 58

    (25) asignado -> devfunc .
    (72) exp8 -> devfunc .

    cor1            reduce using rule 25 (asignado -> devfunc .)
    por             reduce using rule 72 (exp8 -> devfunc .)
    div             reduce using rule 72 (exp8 -> devfunc .)
    mod             reduce using rule 72 (exp8 -> devfunc .)
    mas             reduce using rule 72 (exp8 -> devfunc .)
    res             reduce using rule 72 (exp8 -> devfunc .)
    mayor           reduce using rule 72 (exp8 -> devfunc .)
    mayori          reduce using rule 72 (exp8 -> devfunc .)
    menor           reduce using rule 72 (exp8 -> devfunc .)
    menori          reduce using rule 72 (exp8 -> devfunc .)
    igual           reduce using rule 72 (exp8 -> devfunc .)
    diferente       reduce using rule 72 (exp8 -> devfunc .)
    band            reduce using rule 72 (exp8 -> devfunc .)
    and             reduce using rule 72 (exp8 -> devfunc .)
    bor             reduce using rule 72 (exp8 -> devfunc .)
    or              reduce using rule 72 (exp8 -> devfunc .)
    shiftizq        reduce using rule 72 (exp8 -> devfunc .)
    shiftder        reduce using rule 72 (exp8 -> devfunc .)
    bxor            reduce using rule 72 (exp8 -> devfunc .)
    t_xor           reduce using rule 72 (exp8 -> devfunc .)
    PTCOMA          reduce using rule 72 (exp8 -> devfunc .)
    par2            reduce using rule 72 (exp8 -> devfunc .)
    cor2            reduce using rule 72 (exp8 -> devfunc .)


state 59

    (26) asignado -> pila .
    (73) exp8 -> pila .

    cor1            reduce using rule 26 (asignado -> pila .)
    por             reduce using rule 73 (exp8 -> pila .)
    div             reduce using rule 73 (exp8 -> pila .)
    mod             reduce using rule 73 (exp8 -> pila .)
    mas             reduce using rule 73 (exp8 -> pila .)
    res             reduce using rule 73 (exp8 -> pila .)
    mayor           reduce using rule 73 (exp8 -> pila .)
    mayori          reduce using rule 73 (exp8 -> pila .)
    menor           reduce using rule 73 (exp8 -> pila .)
    menori          reduce using rule 73 (exp8 -> pila .)
    igual           reduce using rule 73 (exp8 -> pila .)
    diferente       reduce using rule 73 (exp8 -> pila .)
    band            reduce using rule 73 (exp8 -> pila .)
    and             reduce using rule 73 (exp8 -> pila .)
    bor             reduce using rule 73 (exp8 -> pila .)
    or              reduce using rule 73 (exp8 -> pila .)
    shiftizq        reduce using rule 73 (exp8 -> pila .)
    shiftder        reduce using rule 73 (exp8 -> pila .)
    bxor            reduce using rule 73 (exp8 -> pila .)
    t_xor           reduce using rule 73 (exp8 -> pila .)
    PTCOMA          reduce using rule 73 (exp8 -> pila .)
    par2            reduce using rule 73 (exp8 -> pila .)
    cor2            reduce using rule 73 (exp8 -> pila .)


state 60

    (27) asignado -> iden .
    (65) exp8 -> iden .

    cor1            reduce using rule 27 (asignado -> iden .)
    por             reduce using rule 65 (exp8 -> iden .)
    div             reduce using rule 65 (exp8 -> iden .)
    mod             reduce using rule 65 (exp8 -> iden .)
    mas             reduce using rule 65 (exp8 -> iden .)
    res             reduce using rule 65 (exp8 -> iden .)
    mayor           reduce using rule 65 (exp8 -> iden .)
    mayori          reduce using rule 65 (exp8 -> iden .)
    menor           reduce using rule 65 (exp8 -> iden .)
    menori          reduce using rule 65 (exp8 -> iden .)
    igual           reduce using rule 65 (exp8 -> iden .)
    diferente       reduce using rule 65 (exp8 -> iden .)
    band            reduce using rule 65 (exp8 -> iden .)
    and             reduce using rule 65 (exp8 -> iden .)
    bor             reduce using rule 65 (exp8 -> iden .)
    or              reduce using rule 65 (exp8 -> iden .)
    shiftizq        reduce using rule 65 (exp8 -> iden .)
    shiftder        reduce using rule 65 (exp8 -> iden .)
    bxor            reduce using rule 65 (exp8 -> iden .)
    t_xor           reduce using rule 65 (exp8 -> iden .)
    PTCOMA          reduce using rule 65 (exp8 -> iden .)
    par2            reduce using rule 65 (exp8 -> iden .)
    cor2            reduce using rule 65 (exp8 -> iden .)


state 61

    (64) exp8 -> string .

    por             reduce using rule 64 (exp8 -> string .)
    div             reduce using rule 64 (exp8 -> string .)
    mod             reduce using rule 64 (exp8 -> string .)
    mas             reduce using rule 64 (exp8 -> string .)
    res             reduce using rule 64 (exp8 -> string .)
    mayor           reduce using rule 64 (exp8 -> string .)
    mayori          reduce using rule 64 (exp8 -> string .)
    menor           reduce using rule 64 (exp8 -> string .)
    menori          reduce using rule 64 (exp8 -> string .)
    igual           reduce using rule 64 (exp8 -> string .)
    diferente       reduce using rule 64 (exp8 -> string .)
    band            reduce using rule 64 (exp8 -> string .)
    and             reduce using rule 64 (exp8 -> string .)
    bor             reduce using rule 64 (exp8 -> string .)
    or              reduce using rule 64 (exp8 -> string .)
    shiftizq        reduce using rule 64 (exp8 -> string .)
    shiftder        reduce using rule 64 (exp8 -> string .)
    bxor            reduce using rule 64 (exp8 -> string .)
    t_xor           reduce using rule 64 (exp8 -> string .)
    PTCOMA          reduce using rule 64 (exp8 -> string .)
    cor2            reduce using rule 64 (exp8 -> string .)
    par2            reduce using rule 64 (exp8 -> string .)


state 62

    (66) exp8 -> entero .

    por             reduce using rule 66 (exp8 -> entero .)
    div             reduce using rule 66 (exp8 -> entero .)
    mod             reduce using rule 66 (exp8 -> entero .)
    mas             reduce using rule 66 (exp8 -> entero .)
    res             reduce using rule 66 (exp8 -> entero .)
    mayor           reduce using rule 66 (exp8 -> entero .)
    mayori          reduce using rule 66 (exp8 -> entero .)
    menor           reduce using rule 66 (exp8 -> entero .)
    menori          reduce using rule 66 (exp8 -> entero .)
    igual           reduce using rule 66 (exp8 -> entero .)
    diferente       reduce using rule 66 (exp8 -> entero .)
    band            reduce using rule 66 (exp8 -> entero .)
    and             reduce using rule 66 (exp8 -> entero .)
    bor             reduce using rule 66 (exp8 -> entero .)
    or              reduce using rule 66 (exp8 -> entero .)
    shiftizq        reduce using rule 66 (exp8 -> entero .)
    shiftder        reduce using rule 66 (exp8 -> entero .)
    bxor            reduce using rule 66 (exp8 -> entero .)
    t_xor           reduce using rule 66 (exp8 -> entero .)
    PTCOMA          reduce using rule 66 (exp8 -> entero .)
    cor2            reduce using rule 66 (exp8 -> entero .)
    par2            reduce using rule 66 (exp8 -> entero .)


state 63

    (67) exp8 -> decimal .

    por             reduce using rule 67 (exp8 -> decimal .)
    div             reduce using rule 67 (exp8 -> decimal .)
    mod             reduce using rule 67 (exp8 -> decimal .)
    mas             reduce using rule 67 (exp8 -> decimal .)
    res             reduce using rule 67 (exp8 -> decimal .)
    mayor           reduce using rule 67 (exp8 -> decimal .)
    mayori          reduce using rule 67 (exp8 -> decimal .)
    menor           reduce using rule 67 (exp8 -> decimal .)
    menori          reduce using rule 67 (exp8 -> decimal .)
    igual           reduce using rule 67 (exp8 -> decimal .)
    diferente       reduce using rule 67 (exp8 -> decimal .)
    band            reduce using rule 67 (exp8 -> decimal .)
    and             reduce using rule 67 (exp8 -> decimal .)
    bor             reduce using rule 67 (exp8 -> decimal .)
    or              reduce using rule 67 (exp8 -> decimal .)
    shiftizq        reduce using rule 67 (exp8 -> decimal .)
    shiftder        reduce using rule 67 (exp8 -> decimal .)
    bxor            reduce using rule 67 (exp8 -> decimal .)
    t_xor           reduce using rule 67 (exp8 -> decimal .)
    PTCOMA          reduce using rule 67 (exp8 -> decimal .)
    cor2            reduce using rule 67 (exp8 -> decimal .)
    par2            reduce using rule 67 (exp8 -> decimal .)


state 64

    (77) exp8 -> t_read . par1 par2

    par1            shift and go to state 107


state 65

    (14) ASIGNACION_ARR -> asignado L_ACCESOS asignado . exp PTCOMA
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    asignado                       shift and go to state 37
    exp                            shift and go to state 108
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    exp8                           shift and go to state 53

state 66

    (59) L_ACCESOS -> L_ACCESOS acceso .

    TEMPORAL        reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    puntero         reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    direccion       reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    parametro       reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    devfunc         reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    pila            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    iden            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    cor1            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    por             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    div             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    mod             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    mas             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    res             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    mayor           reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    mayori          reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    menor           reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    menori          reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    igual           reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    diferente       reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    band            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    and             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    bor             reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    or              reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    shiftizq        reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    shiftder        reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    bxor            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    t_xor           reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    PTCOMA          reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    par2            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)
    cor2            reduce using rule 59 (L_ACCESOS -> L_ACCESOS acceso .)


state 67

    (61) acceso -> cor1 exp8 . cor2

    cor2            shift and go to state 109


state 68

    (65) exp8 -> iden .

    cor2            reduce using rule 65 (exp8 -> iden .)


state 69

    (68) exp8 -> TEMPORAL .

    cor2            reduce using rule 68 (exp8 -> TEMPORAL .)


state 70

    (69) exp8 -> puntero .

    cor2            reduce using rule 69 (exp8 -> puntero .)


state 71

    (70) exp8 -> direccion .

    cor2            reduce using rule 70 (exp8 -> direccion .)


state 72

    (71) exp8 -> parametro .

    cor2            reduce using rule 71 (exp8 -> parametro .)


state 73

    (72) exp8 -> devfunc .

    cor2            reduce using rule 72 (exp8 -> devfunc .)


state 74

    (73) exp8 -> pila .

    cor2            reduce using rule 73 (exp8 -> pila .)


state 75

    (16) GOTO -> t_goto iden bipunto .

    t_goto          reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    t_unset         reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    t_print         reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    t_exit          reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    TEMPORAL        reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    puntero         reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    direccion       reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    parametro       reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    devfunc         reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    pila            reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    iden            reduce using rule 16 (GOTO -> t_goto iden bipunto .)
    $end            reduce using rule 16 (GOTO -> t_goto iden bipunto .)


state 76

    (15) UNSET -> t_unset par1 asignado . par2 PTCOMA

    par2            shift and go to state 110


state 77

    (17) PRINT -> t_print par1 exp . par2 PTCOMA

    par2            shift and go to state 111


state 78

    (58) exp11 -> asignado L_ACCESOS .
    (59) L_ACCESOS -> L_ACCESOS . acceso
    (61) acceso -> . cor1 exp8 cor2

    por             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    div             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    mod             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    mas             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    res             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    mayor           reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    mayori          reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    menor           reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    menori          reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    igual           reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    diferente       reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    band            reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    and             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    bor             reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    or              reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    shiftizq        reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    shiftder        reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    bxor            reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    t_xor           reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    PTCOMA          reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    par2            reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    cor2            reduce using rule 58 (exp11 -> asignado L_ACCESOS .)
    cor1            shift and go to state 32

    acceso                         shift and go to state 66

state 79

    (18) asignacion -> asignado asigna exp PTCOMA .

    t_goto          reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    t_unset         reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    t_print         reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    t_exit          reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    TEMPORAL        reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    puntero         reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    direccion       reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    parametro       reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    devfunc         reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    pila            reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    iden            reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)
    $end            reduce using rule 18 (asignacion -> asignado asigna exp PTCOMA .)


state 80

    (19) as_puntero -> asignado asigna depuntero asignado . PTCOMA

    PTCOMA          shift and go to state 112


state 81

    (28) exp -> exp1 bxor . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp1                           shift and go to state 113
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 82

    (29) exp -> exp1 t_xor . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp1                           shift and go to state 114
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 83

    (31) exp1 -> exp2 bor . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp2                           shift and go to state 115
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 84

    (32) exp1 -> exp2 or . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp2                           shift and go to state 116
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 85

    (33) exp1 -> exp2 shiftizq . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp2                           shift and go to state 117
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 86

    (34) exp1 -> exp2 shiftder . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp2                           shift and go to state 118
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 87

    (36) exp2 -> exp3 band . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp3                           shift and go to state 119
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 88

    (37) exp2 -> exp3 and . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp3                           shift and go to state 120
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 89

    (39) exp3 -> exp4 igual . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp4                           shift and go to state 121
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 90

    (40) exp3 -> exp4 diferente . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp4                           shift and go to state 122
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 91

    (42) exp4 -> exp5 mayor . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp5                           shift and go to state 123
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 92

    (43) exp4 -> exp5 mayori . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp5                           shift and go to state 124
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 93

    (44) exp4 -> exp5 menor . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp5                           shift and go to state 125
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 94

    (45) exp4 -> exp5 menori . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp5                           shift and go to state 126
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 95

    (47) exp5 -> exp6 mas . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp6                           shift and go to state 127
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 96

    (48) exp5 -> exp6 res . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp6                           shift and go to state 128
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 97

    (55) exp7 -> res exp11 .

    por             reduce using rule 55 (exp7 -> res exp11 .)
    div             reduce using rule 55 (exp7 -> res exp11 .)
    mod             reduce using rule 55 (exp7 -> res exp11 .)
    mas             reduce using rule 55 (exp7 -> res exp11 .)
    res             reduce using rule 55 (exp7 -> res exp11 .)
    mayor           reduce using rule 55 (exp7 -> res exp11 .)
    mayori          reduce using rule 55 (exp7 -> res exp11 .)
    menor           reduce using rule 55 (exp7 -> res exp11 .)
    menori          reduce using rule 55 (exp7 -> res exp11 .)
    igual           reduce using rule 55 (exp7 -> res exp11 .)
    diferente       reduce using rule 55 (exp7 -> res exp11 .)
    band            reduce using rule 55 (exp7 -> res exp11 .)
    and             reduce using rule 55 (exp7 -> res exp11 .)
    bor             reduce using rule 55 (exp7 -> res exp11 .)
    or              reduce using rule 55 (exp7 -> res exp11 .)
    shiftizq        reduce using rule 55 (exp7 -> res exp11 .)
    shiftder        reduce using rule 55 (exp7 -> res exp11 .)
    bxor            reduce using rule 55 (exp7 -> res exp11 .)
    t_xor           reduce using rule 55 (exp7 -> res exp11 .)
    PTCOMA          reduce using rule 55 (exp7 -> res exp11 .)
    par2            reduce using rule 55 (exp7 -> res exp11 .)
    cor2            reduce using rule 55 (exp7 -> res exp11 .)


state 98

    (50) exp6 -> exp7 por . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp7                           shift and go to state 129
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 99

    (51) exp6 -> exp7 div . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp7                           shift and go to state 130
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 100

    (52) exp6 -> exp7 mod . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp7                           shift and go to state 131
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 101

    (53) exp6 -> t_abs par1 . exp7 par2
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp7                           shift and go to state 132
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 102

    (74) exp8 -> par1 t_int . par2 exp

    par2            shift and go to state 133


state 103

    (75) exp8 -> par1 t_float . par2 exp

    par2            shift and go to state 134


state 104

    (76) exp8 -> par1 t_char . par2 exp

    par2            shift and go to state 135


state 105

    (56) exp7 -> not exp11 .

    por             reduce using rule 56 (exp7 -> not exp11 .)
    div             reduce using rule 56 (exp7 -> not exp11 .)
    mod             reduce using rule 56 (exp7 -> not exp11 .)
    mas             reduce using rule 56 (exp7 -> not exp11 .)
    res             reduce using rule 56 (exp7 -> not exp11 .)
    mayor           reduce using rule 56 (exp7 -> not exp11 .)
    mayori          reduce using rule 56 (exp7 -> not exp11 .)
    menor           reduce using rule 56 (exp7 -> not exp11 .)
    menori          reduce using rule 56 (exp7 -> not exp11 .)
    igual           reduce using rule 56 (exp7 -> not exp11 .)
    diferente       reduce using rule 56 (exp7 -> not exp11 .)
    band            reduce using rule 56 (exp7 -> not exp11 .)
    and             reduce using rule 56 (exp7 -> not exp11 .)
    bor             reduce using rule 56 (exp7 -> not exp11 .)
    or              reduce using rule 56 (exp7 -> not exp11 .)
    shiftizq        reduce using rule 56 (exp7 -> not exp11 .)
    shiftder        reduce using rule 56 (exp7 -> not exp11 .)
    bxor            reduce using rule 56 (exp7 -> not exp11 .)
    t_xor           reduce using rule 56 (exp7 -> not exp11 .)
    PTCOMA          reduce using rule 56 (exp7 -> not exp11 .)
    par2            reduce using rule 56 (exp7 -> not exp11 .)
    cor2            reduce using rule 56 (exp7 -> not exp11 .)


state 106

    (57) exp7 -> bnot exp11 .

    por             reduce using rule 57 (exp7 -> bnot exp11 .)
    div             reduce using rule 57 (exp7 -> bnot exp11 .)
    mod             reduce using rule 57 (exp7 -> bnot exp11 .)
    mas             reduce using rule 57 (exp7 -> bnot exp11 .)
    res             reduce using rule 57 (exp7 -> bnot exp11 .)
    mayor           reduce using rule 57 (exp7 -> bnot exp11 .)
    mayori          reduce using rule 57 (exp7 -> bnot exp11 .)
    menor           reduce using rule 57 (exp7 -> bnot exp11 .)
    menori          reduce using rule 57 (exp7 -> bnot exp11 .)
    igual           reduce using rule 57 (exp7 -> bnot exp11 .)
    diferente       reduce using rule 57 (exp7 -> bnot exp11 .)
    band            reduce using rule 57 (exp7 -> bnot exp11 .)
    and             reduce using rule 57 (exp7 -> bnot exp11 .)
    bor             reduce using rule 57 (exp7 -> bnot exp11 .)
    or              reduce using rule 57 (exp7 -> bnot exp11 .)
    shiftizq        reduce using rule 57 (exp7 -> bnot exp11 .)
    shiftder        reduce using rule 57 (exp7 -> bnot exp11 .)
    bxor            reduce using rule 57 (exp7 -> bnot exp11 .)
    t_xor           reduce using rule 57 (exp7 -> bnot exp11 .)
    PTCOMA          reduce using rule 57 (exp7 -> bnot exp11 .)
    par2            reduce using rule 57 (exp7 -> bnot exp11 .)
    cor2            reduce using rule 57 (exp7 -> bnot exp11 .)


state 107

    (77) exp8 -> t_read par1 . par2

    par2            shift and go to state 136


state 108

    (14) ASIGNACION_ARR -> asignado L_ACCESOS asignado exp . PTCOMA

    PTCOMA          shift and go to state 137


state 109

    (61) acceso -> cor1 exp8 cor2 .

    TEMPORAL        reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    puntero         reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    direccion       reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    parametro       reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    devfunc         reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    pila            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    iden            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    cor1            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    por             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    div             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    mod             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    mas             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    res             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    mayor           reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    mayori          reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    menor           reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    menori          reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    igual           reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    diferente       reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    band            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    and             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    bor             reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    or              reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    shiftizq        reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    shiftder        reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    bxor            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    t_xor           reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    PTCOMA          reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    par2            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)
    cor2            reduce using rule 61 (acceso -> cor1 exp8 cor2 .)


state 110

    (15) UNSET -> t_unset par1 asignado par2 . PTCOMA

    PTCOMA          shift and go to state 138


state 111

    (17) PRINT -> t_print par1 exp par2 . PTCOMA

    PTCOMA          shift and go to state 139


state 112

    (19) as_puntero -> asignado asigna depuntero asignado PTCOMA .

    t_goto          reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_unset         reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_print         reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    t_exit          reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    TEMPORAL        reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    puntero         reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    direccion       reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    parametro       reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    devfunc         reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    pila            reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    iden            reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)
    $end            reduce using rule 19 (as_puntero -> asignado asigna depuntero asignado PTCOMA .)


state 113

    (28) exp -> exp1 bxor exp1 .

    PTCOMA          reduce using rule 28 (exp -> exp1 bxor exp1 .)
    par2            reduce using rule 28 (exp -> exp1 bxor exp1 .)
    por             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    div             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    mod             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    mas             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    res             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    mayor           reduce using rule 28 (exp -> exp1 bxor exp1 .)
    mayori          reduce using rule 28 (exp -> exp1 bxor exp1 .)
    menor           reduce using rule 28 (exp -> exp1 bxor exp1 .)
    menori          reduce using rule 28 (exp -> exp1 bxor exp1 .)
    igual           reduce using rule 28 (exp -> exp1 bxor exp1 .)
    diferente       reduce using rule 28 (exp -> exp1 bxor exp1 .)
    band            reduce using rule 28 (exp -> exp1 bxor exp1 .)
    and             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    bor             reduce using rule 28 (exp -> exp1 bxor exp1 .)
    or              reduce using rule 28 (exp -> exp1 bxor exp1 .)
    shiftizq        reduce using rule 28 (exp -> exp1 bxor exp1 .)
    shiftder        reduce using rule 28 (exp -> exp1 bxor exp1 .)
    bxor            reduce using rule 28 (exp -> exp1 bxor exp1 .)
    t_xor           reduce using rule 28 (exp -> exp1 bxor exp1 .)
    cor2            reduce using rule 28 (exp -> exp1 bxor exp1 .)


state 114

    (29) exp -> exp1 t_xor exp1 .

    PTCOMA          reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    par2            reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    por             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    div             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    mod             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    mas             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    res             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    mayor           reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    mayori          reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    menor           reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    menori          reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    igual           reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    diferente       reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    band            reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    and             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    bor             reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    or              reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    shiftizq        reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    shiftder        reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    bxor            reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    t_xor           reduce using rule 29 (exp -> exp1 t_xor exp1 .)
    cor2            reduce using rule 29 (exp -> exp1 t_xor exp1 .)


state 115

    (31) exp1 -> exp2 bor exp2 .

    bxor            reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    t_xor           reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    PTCOMA          reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    par2            reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    por             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    div             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    mod             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    mas             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    res             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    mayor           reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    mayori          reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    menor           reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    menori          reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    igual           reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    diferente       reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    band            reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    and             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    bor             reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    or              reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    shiftizq        reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    shiftder        reduce using rule 31 (exp1 -> exp2 bor exp2 .)
    cor2            reduce using rule 31 (exp1 -> exp2 bor exp2 .)


state 116

    (32) exp1 -> exp2 or exp2 .

    bxor            reduce using rule 32 (exp1 -> exp2 or exp2 .)
    t_xor           reduce using rule 32 (exp1 -> exp2 or exp2 .)
    PTCOMA          reduce using rule 32 (exp1 -> exp2 or exp2 .)
    par2            reduce using rule 32 (exp1 -> exp2 or exp2 .)
    por             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    div             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    mod             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    mas             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    res             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    mayor           reduce using rule 32 (exp1 -> exp2 or exp2 .)
    mayori          reduce using rule 32 (exp1 -> exp2 or exp2 .)
    menor           reduce using rule 32 (exp1 -> exp2 or exp2 .)
    menori          reduce using rule 32 (exp1 -> exp2 or exp2 .)
    igual           reduce using rule 32 (exp1 -> exp2 or exp2 .)
    diferente       reduce using rule 32 (exp1 -> exp2 or exp2 .)
    band            reduce using rule 32 (exp1 -> exp2 or exp2 .)
    and             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    bor             reduce using rule 32 (exp1 -> exp2 or exp2 .)
    or              reduce using rule 32 (exp1 -> exp2 or exp2 .)
    shiftizq        reduce using rule 32 (exp1 -> exp2 or exp2 .)
    shiftder        reduce using rule 32 (exp1 -> exp2 or exp2 .)
    cor2            reduce using rule 32 (exp1 -> exp2 or exp2 .)


state 117

    (33) exp1 -> exp2 shiftizq exp2 .

    bxor            reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    t_xor           reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    PTCOMA          reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    par2            reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    por             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    div             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    mod             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    mas             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    res             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    mayor           reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    mayori          reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    menor           reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    menori          reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    igual           reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    diferente       reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    band            reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    and             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    bor             reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    or              reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    shiftizq        reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    shiftder        reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)
    cor2            reduce using rule 33 (exp1 -> exp2 shiftizq exp2 .)


state 118

    (34) exp1 -> exp2 shiftder exp2 .

    bxor            reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    t_xor           reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    PTCOMA          reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    par2            reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    por             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    div             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    mod             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    mas             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    res             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    mayor           reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    mayori          reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    menor           reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    menori          reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    igual           reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    diferente       reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    band            reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    and             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    bor             reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    or              reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    shiftizq        reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    shiftder        reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)
    cor2            reduce using rule 34 (exp1 -> exp2 shiftder exp2 .)


state 119

    (36) exp2 -> exp3 band exp3 .

    bor             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    or              reduce using rule 36 (exp2 -> exp3 band exp3 .)
    shiftizq        reduce using rule 36 (exp2 -> exp3 band exp3 .)
    shiftder        reduce using rule 36 (exp2 -> exp3 band exp3 .)
    bxor            reduce using rule 36 (exp2 -> exp3 band exp3 .)
    t_xor           reduce using rule 36 (exp2 -> exp3 band exp3 .)
    PTCOMA          reduce using rule 36 (exp2 -> exp3 band exp3 .)
    par2            reduce using rule 36 (exp2 -> exp3 band exp3 .)
    por             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    div             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    mod             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    mas             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    res             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    mayor           reduce using rule 36 (exp2 -> exp3 band exp3 .)
    mayori          reduce using rule 36 (exp2 -> exp3 band exp3 .)
    menor           reduce using rule 36 (exp2 -> exp3 band exp3 .)
    menori          reduce using rule 36 (exp2 -> exp3 band exp3 .)
    igual           reduce using rule 36 (exp2 -> exp3 band exp3 .)
    diferente       reduce using rule 36 (exp2 -> exp3 band exp3 .)
    band            reduce using rule 36 (exp2 -> exp3 band exp3 .)
    and             reduce using rule 36 (exp2 -> exp3 band exp3 .)
    cor2            reduce using rule 36 (exp2 -> exp3 band exp3 .)


state 120

    (37) exp2 -> exp3 and exp3 .

    bor             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    or              reduce using rule 37 (exp2 -> exp3 and exp3 .)
    shiftizq        reduce using rule 37 (exp2 -> exp3 and exp3 .)
    shiftder        reduce using rule 37 (exp2 -> exp3 and exp3 .)
    bxor            reduce using rule 37 (exp2 -> exp3 and exp3 .)
    t_xor           reduce using rule 37 (exp2 -> exp3 and exp3 .)
    PTCOMA          reduce using rule 37 (exp2 -> exp3 and exp3 .)
    par2            reduce using rule 37 (exp2 -> exp3 and exp3 .)
    por             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    div             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    mod             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    mas             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    res             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    mayor           reduce using rule 37 (exp2 -> exp3 and exp3 .)
    mayori          reduce using rule 37 (exp2 -> exp3 and exp3 .)
    menor           reduce using rule 37 (exp2 -> exp3 and exp3 .)
    menori          reduce using rule 37 (exp2 -> exp3 and exp3 .)
    igual           reduce using rule 37 (exp2 -> exp3 and exp3 .)
    diferente       reduce using rule 37 (exp2 -> exp3 and exp3 .)
    band            reduce using rule 37 (exp2 -> exp3 and exp3 .)
    and             reduce using rule 37 (exp2 -> exp3 and exp3 .)
    cor2            reduce using rule 37 (exp2 -> exp3 and exp3 .)


state 121

    (39) exp3 -> exp4 igual exp4 .

    band            reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    and             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    bor             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    or              reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    shiftizq        reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    shiftder        reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    bxor            reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    t_xor           reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    PTCOMA          reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    par2            reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    por             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    div             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    mod             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    mas             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    res             reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    mayor           reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    mayori          reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    menor           reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    menori          reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    igual           reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    diferente       reduce using rule 39 (exp3 -> exp4 igual exp4 .)
    cor2            reduce using rule 39 (exp3 -> exp4 igual exp4 .)


state 122

    (40) exp3 -> exp4 diferente exp4 .

    band            reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    and             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    bor             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    or              reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    shiftizq        reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    shiftder        reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    bxor            reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    t_xor           reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    PTCOMA          reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    par2            reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    por             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    div             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    mod             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    mas             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    res             reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    mayor           reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    mayori          reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    menor           reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    menori          reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    igual           reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    diferente       reduce using rule 40 (exp3 -> exp4 diferente exp4 .)
    cor2            reduce using rule 40 (exp3 -> exp4 diferente exp4 .)


state 123

    (42) exp4 -> exp5 mayor exp5 .

    igual           reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    diferente       reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    band            reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    and             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    bor             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    or              reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    shiftizq        reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    shiftder        reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    bxor            reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    t_xor           reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    PTCOMA          reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    par2            reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    por             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    div             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    mod             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    mas             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    res             reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    mayor           reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    mayori          reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    menor           reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    menori          reduce using rule 42 (exp4 -> exp5 mayor exp5 .)
    cor2            reduce using rule 42 (exp4 -> exp5 mayor exp5 .)


state 124

    (43) exp4 -> exp5 mayori exp5 .

    igual           reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    diferente       reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    band            reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    and             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    bor             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    or              reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    shiftizq        reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    shiftder        reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    bxor            reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    t_xor           reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    PTCOMA          reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    par2            reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    por             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    div             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    mod             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    mas             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    res             reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    mayor           reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    mayori          reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    menor           reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    menori          reduce using rule 43 (exp4 -> exp5 mayori exp5 .)
    cor2            reduce using rule 43 (exp4 -> exp5 mayori exp5 .)


state 125

    (44) exp4 -> exp5 menor exp5 .

    igual           reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    diferente       reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    band            reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    and             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    bor             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    or              reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    shiftizq        reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    shiftder        reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    bxor            reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    t_xor           reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    PTCOMA          reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    par2            reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    por             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    div             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    mod             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    mas             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    res             reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    mayor           reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    mayori          reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    menor           reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    menori          reduce using rule 44 (exp4 -> exp5 menor exp5 .)
    cor2            reduce using rule 44 (exp4 -> exp5 menor exp5 .)


state 126

    (45) exp4 -> exp5 menori exp5 .

    igual           reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    diferente       reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    band            reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    and             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    bor             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    or              reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    shiftizq        reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    shiftder        reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    bxor            reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    t_xor           reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    PTCOMA          reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    par2            reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    por             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    div             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    mod             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    mas             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    res             reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    mayor           reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    mayori          reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    menor           reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    menori          reduce using rule 45 (exp4 -> exp5 menori exp5 .)
    cor2            reduce using rule 45 (exp4 -> exp5 menori exp5 .)


state 127

    (47) exp5 -> exp6 mas exp6 .

    mayor           reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    mayori          reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    menor           reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    menori          reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    igual           reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    diferente       reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    band            reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    and             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    bor             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    or              reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    shiftizq        reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    shiftder        reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    bxor            reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    t_xor           reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    PTCOMA          reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    par2            reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    por             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    div             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    mod             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    mas             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    res             reduce using rule 47 (exp5 -> exp6 mas exp6 .)
    cor2            reduce using rule 47 (exp5 -> exp6 mas exp6 .)


state 128

    (48) exp5 -> exp6 res exp6 .

    mayor           reduce using rule 48 (exp5 -> exp6 res exp6 .)
    mayori          reduce using rule 48 (exp5 -> exp6 res exp6 .)
    menor           reduce using rule 48 (exp5 -> exp6 res exp6 .)
    menori          reduce using rule 48 (exp5 -> exp6 res exp6 .)
    igual           reduce using rule 48 (exp5 -> exp6 res exp6 .)
    diferente       reduce using rule 48 (exp5 -> exp6 res exp6 .)
    band            reduce using rule 48 (exp5 -> exp6 res exp6 .)
    and             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    bor             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    or              reduce using rule 48 (exp5 -> exp6 res exp6 .)
    shiftizq        reduce using rule 48 (exp5 -> exp6 res exp6 .)
    shiftder        reduce using rule 48 (exp5 -> exp6 res exp6 .)
    bxor            reduce using rule 48 (exp5 -> exp6 res exp6 .)
    t_xor           reduce using rule 48 (exp5 -> exp6 res exp6 .)
    PTCOMA          reduce using rule 48 (exp5 -> exp6 res exp6 .)
    par2            reduce using rule 48 (exp5 -> exp6 res exp6 .)
    por             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    div             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    mod             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    mas             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    res             reduce using rule 48 (exp5 -> exp6 res exp6 .)
    cor2            reduce using rule 48 (exp5 -> exp6 res exp6 .)


state 129

    (50) exp6 -> exp7 por exp7 .

    mas             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    res             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    mayor           reduce using rule 50 (exp6 -> exp7 por exp7 .)
    mayori          reduce using rule 50 (exp6 -> exp7 por exp7 .)
    menor           reduce using rule 50 (exp6 -> exp7 por exp7 .)
    menori          reduce using rule 50 (exp6 -> exp7 por exp7 .)
    igual           reduce using rule 50 (exp6 -> exp7 por exp7 .)
    diferente       reduce using rule 50 (exp6 -> exp7 por exp7 .)
    band            reduce using rule 50 (exp6 -> exp7 por exp7 .)
    and             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    bor             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    or              reduce using rule 50 (exp6 -> exp7 por exp7 .)
    shiftizq        reduce using rule 50 (exp6 -> exp7 por exp7 .)
    shiftder        reduce using rule 50 (exp6 -> exp7 por exp7 .)
    bxor            reduce using rule 50 (exp6 -> exp7 por exp7 .)
    t_xor           reduce using rule 50 (exp6 -> exp7 por exp7 .)
    PTCOMA          reduce using rule 50 (exp6 -> exp7 por exp7 .)
    par2            reduce using rule 50 (exp6 -> exp7 por exp7 .)
    por             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    div             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    mod             reduce using rule 50 (exp6 -> exp7 por exp7 .)
    cor2            reduce using rule 50 (exp6 -> exp7 por exp7 .)


state 130

    (51) exp6 -> exp7 div exp7 .

    mas             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    res             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    mayor           reduce using rule 51 (exp6 -> exp7 div exp7 .)
    mayori          reduce using rule 51 (exp6 -> exp7 div exp7 .)
    menor           reduce using rule 51 (exp6 -> exp7 div exp7 .)
    menori          reduce using rule 51 (exp6 -> exp7 div exp7 .)
    igual           reduce using rule 51 (exp6 -> exp7 div exp7 .)
    diferente       reduce using rule 51 (exp6 -> exp7 div exp7 .)
    band            reduce using rule 51 (exp6 -> exp7 div exp7 .)
    and             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    bor             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    or              reduce using rule 51 (exp6 -> exp7 div exp7 .)
    shiftizq        reduce using rule 51 (exp6 -> exp7 div exp7 .)
    shiftder        reduce using rule 51 (exp6 -> exp7 div exp7 .)
    bxor            reduce using rule 51 (exp6 -> exp7 div exp7 .)
    t_xor           reduce using rule 51 (exp6 -> exp7 div exp7 .)
    PTCOMA          reduce using rule 51 (exp6 -> exp7 div exp7 .)
    par2            reduce using rule 51 (exp6 -> exp7 div exp7 .)
    por             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    div             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    mod             reduce using rule 51 (exp6 -> exp7 div exp7 .)
    cor2            reduce using rule 51 (exp6 -> exp7 div exp7 .)


state 131

    (52) exp6 -> exp7 mod exp7 .

    mas             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    res             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    mayor           reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    mayori          reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    menor           reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    menori          reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    igual           reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    diferente       reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    band            reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    and             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    bor             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    or              reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    shiftizq        reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    shiftder        reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    bxor            reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    t_xor           reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    PTCOMA          reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    par2            reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    por             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    div             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    mod             reduce using rule 52 (exp6 -> exp7 mod exp7 .)
    cor2            reduce using rule 52 (exp6 -> exp7 mod exp7 .)


state 132

    (53) exp6 -> t_abs par1 exp7 . par2

    par2            shift and go to state 140


state 133

    (74) exp8 -> par1 t_int par2 . exp
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp                            shift and go to state 141
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 134

    (75) exp8 -> par1 t_float par2 . exp
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp                            shift and go to state 142
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 135

    (76) exp8 -> par1 t_char par2 . exp
    (28) exp -> . exp1 bxor exp1
    (29) exp -> . exp1 t_xor exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp2 bor exp2
    (32) exp1 -> . exp2 or exp2
    (33) exp1 -> . exp2 shiftizq exp2
    (34) exp1 -> . exp2 shiftder exp2
    (35) exp1 -> . exp2
    (36) exp2 -> . exp3 band exp3
    (37) exp2 -> . exp3 and exp3
    (38) exp2 -> . exp3
    (39) exp3 -> . exp4 igual exp4
    (40) exp3 -> . exp4 diferente exp4
    (41) exp3 -> . exp4
    (42) exp4 -> . exp5 mayor exp5
    (43) exp4 -> . exp5 mayori exp5
    (44) exp4 -> . exp5 menor exp5
    (45) exp4 -> . exp5 menori exp5
    (46) exp4 -> . exp5
    (47) exp5 -> . exp6 mas exp6
    (48) exp5 -> . exp6 res exp6
    (49) exp5 -> . exp6
    (50) exp6 -> . exp7 por exp7
    (51) exp6 -> . exp7 div exp7
    (52) exp6 -> . exp7 mod exp7
    (53) exp6 -> . t_abs par1 exp7 par2
    (54) exp6 -> . exp7
    (55) exp7 -> . res exp11
    (56) exp7 -> . not exp11
    (57) exp7 -> . bnot exp11
    (63) exp7 -> . exp11
    (58) exp11 -> . asignado L_ACCESOS
    (62) exp11 -> . exp8
    (21) asignado -> . TEMPORAL
    (22) asignado -> . puntero
    (23) asignado -> . direccion
    (24) asignado -> . parametro
    (25) asignado -> . devfunc
    (26) asignado -> . pila
    (27) asignado -> . iden
    (64) exp8 -> . string
    (65) exp8 -> . iden
    (66) exp8 -> . entero
    (67) exp8 -> . decimal
    (68) exp8 -> . TEMPORAL
    (69) exp8 -> . puntero
    (70) exp8 -> . direccion
    (71) exp8 -> . parametro
    (72) exp8 -> . devfunc
    (73) exp8 -> . pila
    (74) exp8 -> . par1 t_int par2 exp
    (75) exp8 -> . par1 t_float par2 exp
    (76) exp8 -> . par1 t_char par2 exp
    (77) exp8 -> . t_read par1 par2

    t_abs           shift and go to state 48
    res             shift and go to state 46
    not             shift and go to state 51
    bnot            shift and go to state 52
    TEMPORAL        shift and go to state 54
    puntero         shift and go to state 55
    direccion       shift and go to state 56
    parametro       shift and go to state 57
    devfunc         shift and go to state 58
    pila            shift and go to state 59
    iden            shift and go to state 60
    string          shift and go to state 61
    entero          shift and go to state 62
    decimal         shift and go to state 63
    par1            shift and go to state 49
    t_read          shift and go to state 64

    exp                            shift and go to state 143
    exp1                           shift and go to state 40
    exp2                           shift and go to state 41
    exp3                           shift and go to state 42
    exp4                           shift and go to state 43
    exp5                           shift and go to state 44
    exp6                           shift and go to state 45
    exp7                           shift and go to state 47
    exp11                          shift and go to state 50
    asignado                       shift and go to state 37
    exp8                           shift and go to state 53

state 136

    (77) exp8 -> t_read par1 par2 .

    por             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    div             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    mod             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    mas             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    res             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    mayor           reduce using rule 77 (exp8 -> t_read par1 par2 .)
    mayori          reduce using rule 77 (exp8 -> t_read par1 par2 .)
    menor           reduce using rule 77 (exp8 -> t_read par1 par2 .)
    menori          reduce using rule 77 (exp8 -> t_read par1 par2 .)
    igual           reduce using rule 77 (exp8 -> t_read par1 par2 .)
    diferente       reduce using rule 77 (exp8 -> t_read par1 par2 .)
    band            reduce using rule 77 (exp8 -> t_read par1 par2 .)
    and             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    bor             reduce using rule 77 (exp8 -> t_read par1 par2 .)
    or              reduce using rule 77 (exp8 -> t_read par1 par2 .)
    shiftizq        reduce using rule 77 (exp8 -> t_read par1 par2 .)
    shiftder        reduce using rule 77 (exp8 -> t_read par1 par2 .)
    bxor            reduce using rule 77 (exp8 -> t_read par1 par2 .)
    t_xor           reduce using rule 77 (exp8 -> t_read par1 par2 .)
    PTCOMA          reduce using rule 77 (exp8 -> t_read par1 par2 .)
    cor2            reduce using rule 77 (exp8 -> t_read par1 par2 .)
    par2            reduce using rule 77 (exp8 -> t_read par1 par2 .)


state 137

    (14) ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .

    t_goto          reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    t_unset         reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    t_print         reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    t_exit          reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    TEMPORAL        reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    puntero         reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    direccion       reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    parametro       reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    devfunc         reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    pila            reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    iden            reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)
    $end            reduce using rule 14 (ASIGNACION_ARR -> asignado L_ACCESOS asignado exp PTCOMA .)


state 138

    (15) UNSET -> t_unset par1 asignado par2 PTCOMA .

    t_goto          reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_unset         reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_print         reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    t_exit          reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    TEMPORAL        reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    puntero         reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    direccion       reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    parametro       reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    devfunc         reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    pila            reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    iden            reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)
    $end            reduce using rule 15 (UNSET -> t_unset par1 asignado par2 PTCOMA .)


state 139

    (17) PRINT -> t_print par1 exp par2 PTCOMA .

    t_goto          reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_unset         reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_print         reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    t_exit          reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    TEMPORAL        reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    puntero         reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    direccion       reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    parametro       reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    devfunc         reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    pila            reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    iden            reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)
    $end            reduce using rule 17 (PRINT -> t_print par1 exp par2 PTCOMA .)


state 140

    (53) exp6 -> t_abs par1 exp7 par2 .

    mas             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    res             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    mayor           reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    mayori          reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    menor           reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    menori          reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    igual           reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    diferente       reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    band            reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    and             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    bor             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    or              reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    shiftizq        reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    shiftder        reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    bxor            reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    t_xor           reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    PTCOMA          reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    par2            reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    por             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    div             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    mod             reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)
    cor2            reduce using rule 53 (exp6 -> t_abs par1 exp7 par2 .)


state 141

    (74) exp8 -> par1 t_int par2 exp .

    por             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    div             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    mod             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    mas             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    res             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    mayor           reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    mayori          reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    menor           reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    menori          reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    igual           reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    diferente       reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    band            reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    and             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    bor             reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    or              reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    shiftizq        reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    shiftder        reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    bxor            reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    t_xor           reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    PTCOMA          reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    cor2            reduce using rule 74 (exp8 -> par1 t_int par2 exp .)
    par2            reduce using rule 74 (exp8 -> par1 t_int par2 exp .)


state 142

    (75) exp8 -> par1 t_float par2 exp .

    por             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    div             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    mod             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    mas             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    res             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    mayor           reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    mayori          reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    menor           reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    menori          reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    igual           reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    diferente       reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    band            reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    and             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    bor             reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    or              reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    shiftizq        reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    shiftder        reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    bxor            reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    t_xor           reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    PTCOMA          reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    cor2            reduce using rule 75 (exp8 -> par1 t_float par2 exp .)
    par2            reduce using rule 75 (exp8 -> par1 t_float par2 exp .)


state 143

    (76) exp8 -> par1 t_char par2 exp .

    por             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    div             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    mod             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    mas             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    res             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    mayor           reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    mayori          reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    menor           reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    menori          reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    igual           reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    diferente       reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    band            reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    and             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    bor             reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    or              reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    shiftizq        reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    shiftder        reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    bxor            reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    t_xor           reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    PTCOMA          reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    cor2            reduce using rule 76 (exp8 -> par1 t_char par2 exp .)
    par2            reduce using rule 76 (exp8 -> par1 t_char par2 exp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for iden in state 8 resolved as shift
WARNING: shift/reduce conflict for bxor in state 40 resolved as shift
WARNING: shift/reduce conflict for t_xor in state 40 resolved as shift
WARNING: shift/reduce conflict for bor in state 41 resolved as shift
WARNING: shift/reduce conflict for or in state 41 resolved as shift
WARNING: shift/reduce conflict for shiftizq in state 41 resolved as shift
WARNING: shift/reduce conflict for shiftder in state 41 resolved as shift
WARNING: shift/reduce conflict for band in state 42 resolved as shift
WARNING: shift/reduce conflict for and in state 42 resolved as shift
WARNING: shift/reduce conflict for igual in state 43 resolved as shift
WARNING: shift/reduce conflict for diferente in state 43 resolved as shift
WARNING: shift/reduce conflict for mayor in state 44 resolved as shift
WARNING: shift/reduce conflict for mayori in state 44 resolved as shift
WARNING: shift/reduce conflict for menor in state 44 resolved as shift
WARNING: shift/reduce conflict for menori in state 44 resolved as shift
WARNING: shift/reduce conflict for mas in state 45 resolved as shift
WARNING: shift/reduce conflict for res in state 45 resolved as shift
WARNING: shift/reduce conflict for por in state 47 resolved as shift
WARNING: shift/reduce conflict for div in state 47 resolved as shift
WARNING: shift/reduce conflict for mod in state 47 resolved as shift
